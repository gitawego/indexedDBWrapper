{"version":3,"sources":["BaseEvented.js","CustomEvent.js","IDBStore.js","IndexedDBWrapper.js","helper.js"],"names":[],"mappings":"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","file":"IndexedDBWrapper.min.js","sourcesContent":["import CustomEvent from './CustomEvent';\nimport {helper} from './helper';\nlet slice = Array.prototype.slice;\n\n/**\n * evented base component, use CustomEvent as compositor\n * @class com.sesamtv.core.util.BaseEvented\n * @requires com.sesamtv.core.util.CustomEvent\n */\nexport default class BaseEvented {\n    constructor() {\n        /**\n         * @property event\n         * @type {com.sesamtv.core.util.CustomEvent}\n         */\n        this.event = new CustomEvent();\n\n        helper.applyIf(this, {\n            /**\n             * named listener handlers\n             * @property evts\n             * @type {Object}\n             */\n            evts: {},\n            /**\n             * anonymous listener handlers\n             * @property connect\n             * @type {Array}\n             */\n            connect: [],\n            config: {}\n        });\n    }\n\n    /**\n     * @method on\n     * @param {String} evt\n     * @param {Function} fnc\n     * @param {Boolean} [once]\n     * @returns {{id: Number, remove: Function}}\n     */\n    on(evt, fnc, once) {\n        return this.event[once ? 'once' : 'on'](evt, fnc.bind(this));\n    }\n\n    /**\n     * @method once\n     * @param {String} evt\n     * @param {Function} fnc\n     * @returns {{id: Number, remove: Function}}\n     */\n    once(evt, fnc) {\n        return this.on(evt, fnc.bind(this), true);\n    }\n\n    /**\n     * @method emit\n     * @returns {Array}\n     */\n    emit() {\n        return this.event.emit.apply(this.event, arguments);\n    }\n\n    /**\n     * @method broadcast\n     * @param {String} wildcard\n     */\n    broadcast(wildcard) {\n        return this.event.broadcast.apply(this.event, arguments);\n    }\n\n    /**\n     * set a property\n     * @method set\n     * @param k\n     * @param v\n     */\n    set(k, v) {\n        if (k === 'config') {\n            return this.setConfigs(v);\n        }\n        if (k in this && this[k] === v) {\n            return;\n        }\n        var res = {\n            newValue: v\n        };\n        if (k in this) {\n            res.oldValue = isObject(this[k]) ? helper.deepClone(this[k]) : this[k];\n        }\n        this[k] = v;\n        this.emit(k, res);\n\n    }\n\n    /**\n     * @method setConfigs\n     * @param {Object} v\n     */\n    setConfigs(v) {\n        Object.keys(v).forEach(function (k) {\n            this.setConfig(k, v[k]);\n        }, this);\n    }\n\n    /**\n     * set a config property\n     * @method setConfig\n     * @param {String} k\n     * @param {*} v\n     */\n    setConfig(k, v) {\n        if (arguments.length === 1) {\n            return this.setConfigs(k);\n        }\n        if (k in this.config && this.config[k] === v) {\n            return;\n        }\n        var res = {\n            key: k,\n            newValue: v\n        };\n        if (k in this.config) {\n            res.oldValue = isObject(this.config[k]) ? helper.deepClone(this.config[k]) : this.config[k];\n        }\n        this.config[k] = v;\n        this.emit('config', res);\n        this.emit('config/' + k, res);\n    }\n\n    /**\n     * @method getConfig\n     * @param {String} k\n     * @returns {*}\n     */\n    getConfig(k) {\n        var res = this.config[k], getter = k + 'Getter';\n        if (this.config[getter]) {\n            return this.config[getter](res, this);\n        }\n        return res;\n    }\n\n    removeEvts(evts) {\n        evts.forEach(function (evt) {\n            if (this.evts[evt]) {\n                this.evts[evt].remove();\n                delete this.evts[evt];\n            }\n        }, this);\n    }\n\n    /**\n     * @method destroy\n     */\n    destroy() {\n\n        this.connect.forEach(function (c) {\n            c.remove();\n        });\n        this.connect.length = 0;\n        Object.keys(this.evts).forEach(function (e) {\n            this.evts[e].remove();\n        }, this);\n        this.evts = {};\n        this.event.purgeListeners();\n        this.$purgeSuper && this.$purgeSuper();\n    }\n}\n/**\n * eventize an object by composition\n * @method eventize\n * @static\n * @param {Object} self\n * @returns {Object}\n */\nBaseEvented.eventize = function (self) {\n    self.event = new CustomEvent();\n    helper.applyIf(self, {\n        evts: {},\n        connect: [],\n        config: {}\n    });\n    var proto = BaseEvented.prototype, supers = {};\n    Object.keys(proto).forEach(function (k) {\n        if (k in self && typeof(self[k]) === 'function') {\n            supers[k] = proto[k];\n        } else {\n            self[k] = proto[k];\n        }\n    });\n    self.$super = function (k) {\n        return supers[k] && supers[k].apply(this, slice.call(arguments, 1));\n    };\n    self.$purgeSuper = function () {\n        supers = null;\n    };\n    return self;\n};\n","\"use strict\";\nlet slice = Array.prototype.slice,\n    glb = typeof(window) !== 'undefined' ? window : global;\n\nlet uuid = (typeof(glb.crypto) != 'undefined' &&\ntypeof(glb.crypto.getRandomValues) != 'undefined') ?\n    function () {\n        // If we have a cryptographically secure PRNG, use that\n        // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n        var buf = new Uint16Array(8);\n        glb.crypto.getRandomValues(buf);\n        var S4 = function (num) {\n            var ret = num.toString(16);\n            while (ret.length < 4) {\n                ret = \"0\" + ret;\n            }\n            return ret;\n        };\n        return (S4(buf[0]) + S4(buf[1]) + \"-\" + S4(buf[2]) + \"-\" + S4(buf[3]) + \"-\" + S4(buf[4]) + \"-\" + S4(buf[5]) + S4(buf[6]) + S4(buf[7]));\n    } : function uuid(tpl) {\n    tpl = tpl || 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    var d = (new Date()).getTime();\n    return tpl.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n};\nlet mixin = function mixin(dest, source) {\n    var name, s, empty = {};\n    for (name in source) {\n        s = source[name];\n        if (!(name in dest) ||\n            (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n            dest[name] = s;\n        }\n    }\n    return dest;\n};\n/**\n * @class com.sesamtv.core.util.CustomEvent\n * @cfg {Object} [args]\n * @cfg {String} [args.channelSeparator]\n */\nexport default class CustomEvent {\n    constructor(args) {\n        /**\n         * @property _listeners\n         * @type {Object.<String,Array>}\n         * @private\n         */\n        this._listeners = {};\n        this.channelSeparator = '/';\n        args && mixin(this, args);\n    }\n\n    /**\n     * @method buildListener\n     * @private\n     * @param {Function|Object} listener\n     * @return {{id:String,content:Function}}\n     */\n    buildListener(listener) {\n        var _id = '#Listener:' + uuid();\n        if (typeof listener === 'function') {\n            listener = {\n                id: _id,\n                content: listener\n            };\n        } else {\n            if (!listener.id) {\n                listener.id = _id;\n            }\n        }\n        return listener;\n    }\n\n    /**\n     * @method on\n     * @param {String} eventName\n     * @param {Function|Object} listener\n     * @param {String} listener.id if listener is an object, define listener id\n     * @param {Function} listener.content if listener is an object, define function\n     * @return {{id:Number,remove:Function}}\n     */\n    on(eventName, listener) {\n        var self = this;\n        if (typeof this._listeners[eventName] === \"undefined\") {\n            this._listeners[eventName] = [];\n        }\n        listener = this.buildListener(listener);\n        if (this.hasListener(eventName, listener.id)) {\n            throw new Error('listener id ' + listener.id + ' duplicated');\n        }\n        this._listeners[eventName].push(listener);\n        return {\n            remove: function () {\n                return self.off(eventName, listener.id);\n            },\n            id: listener.id\n        };\n    }\n\n    /**\n     * listener is triggered only once\n     * @method once\n     * @param {String} eventName\n     * @param {Function|Object} listener\n     * @param {Function} listener.content\n     * @param {String} listener.id\n     * @return {{id:Number,remove:Function}}\n     */\n    once(eventName, listener) {\n        var self = this;\n        listener = this.buildListener(listener);\n        var origContent = listener.content;\n        listener.content = function () {\n            self.off(eventName, listener.id);\n            origContent.apply(self, arguments);\n        };\n        return this.on(eventName, listener);\n    }\n\n    /**\n     * listener is removed when the callback return true\n     *\n     *      this.when('click',function(node){\n             *          return node.id === 'container';\n             *      });\n     *\n     * @method when\n     * @param {String} event\n     * @param {Function} callback\n     * @returns {*}\n     */\n    when(event, callback) {\n        var self = this;\n\n        function check() {\n            if (callback.apply(this, arguments)) {\n                self.off(event, check);\n            }\n        }\n\n        check.listener = callback;\n        self.on(event, check);\n        return this;\n    }\n\n    /**\n     * broadcast message to events, support wildcard (* or ?)\n     *\n     *      this.broadcast('channel1/*',message);\n     *      this.broadcast('channel1/????/event1',message);\n     *      this.broadcast('channel1/event1',msg1,msg2);\n     *\n     * @method broadcast\n     * @param {String} wildcard\n     */\n    broadcast(wildcard) {\n        var params = slice.call(arguments, 1), evtNames = this.getEventNamesByWildcard(wildcard),\n            i = 0, l = evtNames.length, res = [];\n        for (; i < l; i++) {\n            res.push(this.emit.apply(this, [evtNames[i]].concat(params)));\n        }\n        return res;\n    }\n\n    /**\n     * @method getEventNamesByWildcard\n     * @param {String} wildcard\n     * @return {Array.<String>}\n     */\n    getEventNamesByWildcard(wildcard) {\n        var evts = [],\n            self = this,\n            reg = wildcard.replace(/(\\?)/g, function (str, m) {\n                return '[\\\\w\\'-]{1}';\n            }).replace(/\\*/g, function (key, idx, str) {\n                return str.charAt(idx + 1) !== '' ? '([\\\\S\\\\s][^' + self.channelSeparator + ']*)' : '.*?';\n            });\n        JSON.stringify(Object.keys(this._listeners)).replace(new RegExp('\"(' + reg + ')\"', 'g'), function (ignore, eventName) {\n            evts.push(eventName);\n        });\n        return evts;\n    }\n\n    /**\n     * example:\n     *\n     *      this.emit('evtName');\n     *      this.emit('evtName',params);\n     *      this.emit('evtName',param1,param2);\n     *\n     * @method emit\n     * @param {String} eventType\n     * @return {Array}\n     */\n    emit(eventType) {\n        var params, res = [], listeners, len;\n        if (!eventType) {  //falsy\n            throw new Error(\"Event object missing 'eventName' property.\");\n        }\n        params = slice.call(arguments, 1);\n        if (this._listeners[eventType] instanceof Array) {\n            listeners = this._listeners[eventType];\n            len = listeners.length;\n            //decrease the length (instead of increasing from 0)\n            // in case listener is removed while emit method is running\n            while (len--) {\n                if (listeners[len]) {\n                    res.push({\n                        id: listeners[len].id,\n                        result: listeners[len].content.apply(this, params)\n                    });\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * emit to a particular listener\n     *\n     *      this.emitTo('eventName','listenerId',param1,param2);\n     *\n     * @method emitTo\n     * @param eventType\n     * @param listenerId\n     * @returns {Array}\n     */\n    emitTo(eventType, listenerId) {\n        if (!eventType) {  //falsy\n            throw new Error(\"Event object missing 'eventName' property.\");\n        }\n        var params = slice.call(arguments, 2), res = [], listeners, l;\n        if (this._listeners[eventType] instanceof Array) {\n            listeners = this._listeners[eventType];\n            l = listeners.length;\n            while (l--) {\n                if (listeners[l] && listeners[l].id === listenerId) {\n                    res.push({\n                        id: listenerId,\n                        result: listeners[l].content.apply(this, params)\n                    });\n                    break;\n                }\n            }\n            if (listenerId && !res.length) {\n                throw new Error('listener ' + listenerId + ' is not found in event ' + eventType);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * remove a listener\n     * @method off\n     * @param {String} eventName\n     * @param {String|Function} listener a listener id or listener handler\n     */\n    off(eventName, listener) {\n        var res;\n        if (res = this.hasListener(eventName, listener)) {\n            this._listeners[eventName].splice(res.index, 1);\n        }\n    }\n\n    hasEvent(eventName) {\n        if (!eventName) {\n            return Object.keys(this._listeners).length > 0;\n        }\n        return eventName in this._listeners;\n    }\n\n    eventList() {\n        return Object.keys(this._listeners);\n    }\n\n    /**\n     * @method hasListener\n     * @param {String} eventName\n     * @param {String|Function} listener\n     * @return {Object}\n     */\n    hasListener(eventName, listener) {\n        var listenerType = typeof(listener) === 'string' ? 'id' : 'content', listeners, i = 0, len;\n        if ((listeners = this._listeners[eventName]) && (len = listeners.length) > 0) {\n            for (; i < len; i++) {\n                if (listeners[i][listenerType] === listener) {\n                    return {\n                        index: i\n                    };\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @method hasListeners\n     * @param {String} eventName event name\n     * @return {Boolean}\n     */\n    hasListeners(eventName) {\n        if (this._listeners[eventName] instanceof Array) {\n            return this._listeners[eventName].length > 0;\n        }\n        return false;\n    }\n\n    /**\n     * @method getListeners\n     * @param {string} eventName event name\n     * @return {Array.<Object>}\n     */\n    getListeners(eventName) {\n        if (this._listeners[eventName] instanceof Array) {\n            return this._listeners[eventName];\n        }\n    }\n\n    /**\n     * @method purgeListeners\n     * @param {String} [evtName] if evtName is undefined, remove all the events\n     */\n    purgeListeners(evtName) {\n        if (evtName) {\n            delete this._listeners[evtName];\n        } else {\n            delete this._listeners;\n            this._listeners = {};\n        }\n    }\n}\n","export default\nclass IDBStore {\n    constructor(db, storeName) {\n        this.db = db;\n        this.storeName = storeName;\n    }\n\n    clear() {\n        var store = this.db.getStore(this.storeName, 'readwrite');\n        return new Promise(function (resolve, reject) {\n            var req = store.clear();\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    drop() {\n        return new Promise((resolve, reject)=> {\n            var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n                req = itemStore['delete']();\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    insert(item) {\n        var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n            req = itemStore.add(item);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    openTransaction(mode) {\n        return this.db.openTransaction(this.storeName, mode);\n    }\n\n    upsert(query, data, merge) {\n        var self = this, tasks = [], hasData;\n        return new Promise((resolve, reject) => {\n            self.query(query, {\n                openMode: 'readwrite',\n                onCursor: (cursor, store, objectStore) => {\n                    hasData = true;\n                    if (merge) {\n                        data = helper.mixin(cursor.value, data);\n                    }\n                    data[objectStore.keyPath] = cursor.primaryKey;\n                    tasks.push(this.cursorOperation(cursor, 'update', data));\n                }\n            }).then((res)=> {\n                if (!hasData) {\n                    var objectStore = this.db.getStore(this.storeName, 'readwrite');\n                    tasks.push(new Promise(function (resolve, reject) {\n                        var req = objectStore.add(data);\n                        req.onsuccess = resolve;\n                        req.onerror = reject;\n                    }));\n                }\n                if (!tasks.length) {\n                    return resolve();\n                }\n                Promise.all(tasks).then(resolve, reject);\n            }, reject);\n        });\n    }\n\n    bulk(items) {\n        return this.db.bulk(items, this.storeName);\n    }\n\n    removeByKey(keyPathId) {\n        var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n            req = itemStore['delete'](keyPathId);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    remove(query) {\n        var self = this, tasks = [];\n        return new Promise((resolve, reject) => {\n            self.query(query, {\n                openMode: 'readwrite',\n                onCursor: (cursor) => {\n                    if (cursor) {\n                        tasks.push(this.cursorOperation(cursor, 'delete'));\n                    }\n                }\n            }).then(function () {\n                if (!tasks.length) {\n                    return resolve();\n                }\n                Promise.all(tasks).then(resolve, reject);\n            }, reject);\n        });\n    }\n\n    cursorOperation(cursor, action, data) {\n        return new Promise(function (resolve, reject) {\n            var req;\n            if (action !== 'delete') {\n                req = cursor[action](data);\n            } else {\n                req = cursor[action]();\n            }\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    findByKey(keyValue) {\n        var req = this.db.getStore(this.storeName, 'readwrite').get(keyValue);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = resolve;\n            req.onerror = reject;\n        });\n    }\n\n    buildRange(query) {\n        var range;\n        query = query || {};\n        if ('eq' in query) {\n            range = IDBKeyRange.only(query.eq);\n        } else if ('gte' in query && 'lte' in query) {\n            range = IDBKeyRange.bound(query.gte, query.lte, true, true);\n        } else if ('gte' in query && 'lt' in query) {\n            range = IDBKeyRange.bound(query.gte, query.lt, true, false);\n        } else if ('gt' in query && 'lt' in query) {\n            range = IDBKeyRange.bound(query.gt, query.lt, false, false);\n        } else if ('gt' in query && 'lte' in query) {\n            range = IDBKeyRange.bound(query.gt, query.lte, false, true);\n        } else if ('gt' in query) {\n            range = IDBKeyRange.lowerBound(query.gt);\n        } else if ('gte' in query) {\n            range = IDBKeyRange.lowerBound(query.gte, true);\n        } else if ('lt' in query) {\n            range = IDBKeyRange.upperBound(query.lt);\n        } else if ('lte' in query) {\n            range = IDBKeyRange.upperBound(query.lte, true);\n        }\n        return range;\n    }\n\n    findOne(query) {\n        return new Promise((resolve,reject) => {\n            this.query(query, {\n                onCursor: function () {\n                    return false;\n                }\n            }).then(function(res){\n                resolve(res[0]);\n            },reject);\n        });\n    }\n\n    find(query) {\n        return this.query(query);\n    }\n\n    /**\n     *\n     *  query({\n     *      \"eq\":\"admin\",\n     *      \"index\":\"username\",\n     *      \"filter\":[\"$record.total > 10\"]\n     *  });\n     *\n     * @method query\n     * @param {Object} query\n     * @param {*} query.eq only\n     * @param {*} query.gt lowerBound\n     * @param {*} query.gte lowerBound with true\n     * @param {*} query.lt upperBound\n     * @param {*} query.lte upperBound with true\n     * @param {Object|Function} query.filter\n     * @param {String} [query.order] prev,prevunique,next,nextunique\n     * @param {Object} [opt]\n     * @param {String} [opt.openMode='readonly'] readwrite or readonly\n     * @param {Function} [opt.onCursor]\n     */\n    query(query, opt) {\n        opt = opt || {};\n        opt.openMode = opt.openMode || 'readonly';\n        query = query || {};\n        query.order = query.order || 'next';\n        var trans = this.openTransaction(opt.openMode),\n            objectStore = trans.objectStore(this.storeName), reqStore,\n            self = this, collect = [], req, range;\n        range = this.buildRange(query);\n        reqStore = objectStore;\n        if (range) {\n            if (query.index && objectStore.indexNames.contains(query.index)) {\n                reqStore = objectStore.index(query.index);\n                req = reqStore.openCursor(range, query.order);\n            } else {\n                req = reqStore.openCursor(range, query.order);\n            }\n        } else {\n            req = reqStore.openCursor();\n        }\n\n        var deferred = new Promise((resolve, reject)=> {\n            req.onsuccess = function (event) {\n                var queryCursor = event.target.result, next = true;\n                if (queryCursor) {\n                    if (opt.onCursor) {\n                        next = opt.onCursor(queryCursor, reqStore, objectStore) !== false;\n                    }\n                    if (!query.filter) {\n                        collect.push(queryCursor.value);\n                    } else {\n                        if (self.queryFilter(query.filter, queryCursor)) {\n                            collect.push(queryCursor.value);\n                        }\n                    }\n                    if (next) {\n                        queryCursor['continue']();\n                    } else {\n                        resolve(collect);\n                    }\n                } else {\n                    resolve(collect);\n                }\n            };\n\n            req.onerror = function (evt) {\n                console.warn(evt.target.error.message, evt.target.error.name);\n                reject({\n                    error: evt.target.error,\n                    type: evt.target.error.name\n                });\n            };\n        });\n        deferred.abort = function () {\n            req.readyState !== 'done' && trans.abort();\n        };\n        return deferred;\n    }\n\n    queryFilter(filter, cursor) {\n        if (typeof(filter) === 'function') {\n            return filter(cursor);\n        }\n        var value = cursor.value;\n        return new Function('$record', 'return ' + filter.join(' && ') + ' ;')(value);\n    }\n}","import BaseEvented from './BaseEvented';\nimport {helper} from './helper';\nimport {IDBStore} from './IDBStore';\nvar exampleStru = {\n    \"schema\": [{\n        \"version\": 1,\n        \"schema\": {\n            \"store1\": {\n                \"keyPath\": {\n                    \"keyPath\": \"id\",\n                    \"autoIncrement\": true\n                },\n                \"indexes\": {\n                    \"indexId1\": {\n                        \"index\": \"index1\",\n                        \"unique\": true\n                    }\n                }\n            },\n            \"store2\": {\n                \"keyPath\": {\n                    \"keyPath\": \"id\",\n                    \"autoIncrement\": true\n                },\n                \"alter\": [\n                    {\n                        \"action\": \"removeIndex\",\n                        \"param\": [\"index1\"]\n                    },\n                    {\n                        \"action\": \"clear\"\n                    }\n                ],\n                \"indexes\": {\n                    \"indexid2\": {\n                        \"index\": \"index2\",\n                        \"unique\": false\n                    }\n                }\n            }\n        }\n    }]\n};\n/**\n * this class depends on axemclion/IndexedDBShim\n * @class com.sesamtv.core.util.store.IndexedDBStore\n * @extends com.sesamtv.core.util.BaseEvented\n */\nexport default\nclass IndexedDBWrapper extends BaseEvented {\n\n    constructor(config) {\n        this.config = {\n            dbName: '',\n            version: 1,\n            operatorMapping: {\n                \"eq\": \"=\",\n                \"gt\": \">\",\n                \"gte\": \">=\",\n                \"lt\": \"<\",\n                \"lte\": \"<=\"\n            },\n            forceShim: false,\n            timeFormat: /^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$/,\n            schema: {}\n        };\n        config && helper.mixin(this.config, config);\n        super();\n\n\n    }\n\n    indexedDB() {\n        return window.indexedDB\n            || window.msIndexedDB\n            || window.mozIndexedDB\n            || window.webkitIndexedDB;\n    }\n\n    open(dbConfig) {\n        var self = this;\n        this.config.dbName = dbConfig.dbName;\n        this.config.version = dbConfig.version;\n        return new Promise((resolve, reject) => {\n            var req = this.indexedDB().open(this.config.dbName, this.config.version);\n            req.onsuccess = function (evt) {\n                // Better use \"this\" than \"req\" to get the result to avoid problems with\n                // garbage collection.\n                // db = req.result;\n                self.db = this.result;\n                self.db.onerror = function (evt) {\n                    self.emit('error', evt.target.error.message);\n                };\n                resolve(self.db);\n\n            };\n            req.onerror = reject;\n            req.onupgradeneeded = function (e) {\n                console.log('onupgradeneeded');\n                self.db = this.result;\n                if (!dbConfig.schema || dbConfig.schema.length === 0) {\n                    throw new Error('no schema defined, can not upgrade');\n                }\n                if (e.oldVersion >= dbConfig.schema[dbConfig.schema.length - 1].version) {\n                    return;\n                }\n                self.config.oldVersion = e.oldVersion;\n                self.schema(dbConfig.schema);\n            };\n        });\n    }\n\n    schema(schemas) {\n        this.config.schema = schemas;\n        schemas.forEach(function (schema) {\n            if (schema.version > this.config.oldVersion) {\n                this._schema(schema.schema);\n            }\n        }, this);\n    }\n\n    /**\n     *\n     * @param schema\n     */\n    _schema(schema) {\n        var self = this;\n        var thisDB = this.db;\n        Object.keys(schema).forEach(function (storeName) {\n            var storeConf = schema[storeName], objectStore;\n            if (thisDB.objectStoreNames.contains(storeName)) {\n                objectStore = thisDB.transaction([storeName], 'readwrite').objectStore(storeName);\n                //for upgrading\n                if (storeConf.alter) {\n                    storeConf.alter.forEach(function (alter) {\n                        if (alter.param) {\n                            objectStore[alter.action].apply(objectStore, alter.param);\n                        } else {\n                            objectStore[alter.action]();\n                        }\n                    });\n                }\n            } else {\n                objectStore = thisDB.createObjectStore(storeName, storeConf.keyPath);\n            }\n            if (storeConf.indexes) {\n                Object.keys(storeConf.indexes).forEach(function (idxName) {\n                    var idxConf = storeConf.indexes[idxName];\n                    objectStore.createIndex(idxName, idxConf.index, {\n                        unique: idxConf.unique\n                    });\n                });\n            }\n        }, this);\n    }\n\n    store(storeName) {\n        if (this.db.objectStoreNames.contains(storeName)) {\n            return new IDBStore(this, storeName);\n        }\n    }\n\n    /**\n     * {\"update\":[],\"delete\":[]}\n     * @param {Object} items\n     * @param {String} [storeName]\n     * @returns {Promise}\n     */\n    bulk(items, storeName) {\n        return new Promise((resolve, reject)=> {\n            var i = 0, parsedItems = [],\n                itemStore = this.getStore(storeName, 'readwrite', {\n                    onerror: reject\n                }), res = [];\n\n            if (Array.isArray(items)) {\n                parsedItems = items.map(function (data) {\n                    return {\n                        method: 'put',\n                        data: data\n                    };\n                });\n            } else {\n                Object.keys(items).forEach(function (method) {\n                    parsedItems = parsedItems.concat(items[method].map(function (data) {\n                        return {\n                            method: method,\n                            data: data\n                        };\n                    }));\n                });\n            }\n\n            function putNext(evt) {\n                if (i > 0) {\n                    res.push(this.result);\n                }\n                var req;\n                if (i < parsedItems.length) {\n                    switch (parsedItems[i].method) {\n                        case \"delete\":\n                            req = itemStore['delete']();\n                            break;\n                        default:\n                            req = itemStore[parsedItems[i].method](parsedItems[i].data);\n                    }\n                    req.onsuccess = putNext;\n                    //req.onerror = errHandler;\n                    ++i;\n                } else {   // complete\n                    resolve({\n                        results: res,\n                        store: storeName\n                    });\n                }\n            }\n\n            putNext();\n        });\n    }\n\n    getStore(storeName, mode, opt) {\n        var trans = this.openTransaction(storeName, mode, opt);\n        return trans.objectStore(storeName);\n    }\n\n    openTransaction(storeName, mode, opt) {\n        opt = opt || {};\n        var trans = this.db.transaction(storeName, mode);\n        if ('oncomplete' in opt) {\n            trans.oncomplete = opt.oncomplete;\n        }\n        if ('onabort' in opt) {\n            trans.onabort = opt.onabort;\n        }\n        if ('onerror' in opt) {\n            trans.onerror = opt.onerror;\n        }\n        return trans;\n    }\n\n    dropDB() {\n        this.db.close();\n        return this.indexedDB().deleteDatabase(this.config.dbName);\n    }\n\n}\n","\"use strict\";\nlet slice = Array.prototype.slice;\n/**\n * @class com.sesamtv.core.util.Helper\n */\nexport var helper = {\n    /**\n     * create a sandboxed function\n     *\n     *      var fnc = sandbox(['id','name'],'alert(\"id\");');\n     *      //it will throw an error \"undefined is not a function\", because alert is disabled\n     *      fnc(10,'my name');\n     *\n     *      var fnc = sandbox(['id'], 'document.querySelector(\"#\"+id)');\n     *      //it will throw an error because document is disabled\n     *      fnc('container');\n     *\n     *      //to give the access of document to the function\n     *      var fnc = sandbox(['id'],'return document.querySelector(\"#\"+id);',{\n         *          shim:{\n         *              'document':document\n         *          }\n         *      });\n     *      //or only partially\n     *      var fnc = sandbox(['id'],'return document.querySelector(\"#\"+id);',{\n         *          shim:{\n         *              'document':{\n         *                  \"querySelector\":document.querySelector\n         *              }\n         *          }\n         *      });\n     *      fnc('menu');\n     *\n     *\n     * @method sandbox\n     * @param {Array.<String>} param\n     * @param {String} context\n     * @param {Object} opt\n     * @param {Array.<String>} [opt.restrictedVars] restricted variables\n     * @param {Object} [opt.shim] shim the restricted variables\n     * @param {Object} [opt.scope]\n     * @returns {Function}\n     */\n    sandbox: function sandbox(param, context, opt) {\n        opt = opt || {};\n        var restrictedVars = ['window', 'document', 'alert', 'location', 'openDatabase', 'indexedDB',\n                'console', 'close', 'setTimeout', 'setInterval', 'open', 'localStorage', 'sessionStorage',\n                'parent', 'self', 'addEventListener', 'dispatchEvent', 'postMessage', 'WebSocket', 'Blob',\n                'require', 'define', '$'].concat(opt.restrictedVars || []),\n            paramLen = param.length, fnc, argLen = 0, args, shimIndex = 0, foundShim, totalShim,\n            emptyVars = new Array(restrictedVars.length), shimKeys, shimKey,\n            splice = Array.prototype.splice;\n\n        if (opt.shim) {\n            shimKeys = Object.keys(opt.shim);\n            for (totalShim = shimKeys.length; shimIndex < totalShim; shimIndex++) {\n                shimKey = shimKeys[shimIndex];\n                foundShim = restrictedVars.indexOf(shimKey);\n                if (foundShim === -1) {\n                    continue;\n                }\n                emptyVars.splice(foundShim, 1, opt.shim[shimKey]);\n            }\n        }\n\n        param = param.concat(restrictedVars);\n        fnc = new Function(param.join(','), context);\n        return function () {\n            args = splice.call(arguments, 0, paramLen);\n            args = args.concat(emptyVars);\n            return fnc.apply(opt.scope || {}, args);\n        };\n    },\n\n    debounce: function debounce(func, wait, immediate) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            clearTimeout(timeout);\n            timeout = setTimeout(function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            }, wait);\n            if (immediate && !timeout) func.apply(context, args);\n        };\n    },\n    randomIntFromInterval: function randomIntFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    throttle: function throttle(fn, minDelay) {\n        var lastCall = 0;\n        return function () {\n            var now = +new Date();\n            if (now - lastCall < minDelay) {\n                return;\n            }\n            lastCall = now;\n            return fn.apply(this, arguments);\n        };\n    },\n    /**\n     * @method leftPad\n     * @param {String|Number} result\n     * @param {Number} size\n     * @param {String} ch\n     * @returns {string}\n     */\n    leftPad: function (result, size, ch) {\n        result += '';\n        if (!ch) {\n            ch = \" \";\n        }\n        while (result.length < size) {\n            result = ch + result;\n        }\n        return result;\n    },\n    rightPad: function (result, size, ch) {\n        result += '';\n        if (!ch) {\n            ch = \" \";\n        }\n        while (result.length < size) {\n            result = result + ch;\n        }\n        return result;\n    },\n    /**\n     * async array processing without blocking the UI (useful when web worker is not available)\n     * @method chunk\n     * @param {Array} items\n     * @param {Function} process\n     * @param {Object} [context]\n     * @param {Function} [callback]\n     */\n    chunk: function timedChunk(items, process, context, callback) {\n        var todo = items.slice(0), i = 0;\n        setTimeout(function worker() {\n            var start = +new Date();\n            do {\n                process.call(context, todo.shift(), i++);\n            } while (todo.length > 0 && (+new Date() - start < 50));\n            if (todo.length > 0) {\n                setTimeout(worker, 25);\n            } else {\n                callback(items);\n            }\n        }, 25);\n    },\n    /**\n     * uppercase the first character\n     * @method ucFirst\n     * @param {String} str\n     * @returns {String}\n     */\n    ucFirst: function (str) {\n        str += '';\n        var f = str.charAt(0).toUpperCase();\n        return f + str.substr(1);\n    },\n    addSlashes: function (str) {\n        return (str + '')\n            .replace(/[\\\\\"']/g, '\\\\$&')\n            .replace(/\\u0000/g, '\\\\0');\n    },\n    applyIf: function applyIf(dest, obj, override) {\n        var key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key) && (!(key in dest) || override)) {\n                dest[key] = obj[key];\n            }\n        }\n    },\n    /**\n     * @method substitute\n     * @param {String} template\n     * @param {Object|Array} [map] if map is not defined, return a function with predefined template\n     * @param {Function} [transform]\n     * @param {Object} [thisObject] scope\n     * @returns {String|Function}\n     */\n    substitute: function (template, map, transform, thisObject) {\n        var self = this, run = function (data) {\n            return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\n                function (match, key, format) {\n                    var value = self.getObject(key, false, data);\n                    if (format) {\n                        value = self.getObject(format, false, thisObject).call(thisObject, value, key);\n                    }\n                    return transform(value, key).toString();\n                });\n        };\n        thisObject = thisObject || typeof(window) === 'undefined' ? global : window;\n        transform = transform ?\n            transform.bind(thisObject) : function (v) {\n            return v;\n        };\n        return map ? run(map) : function (map) {\n            return run(map);\n        };\n    },\n    /**\n     * @method taskBuffer\n     * @param {Array.<function(next:function)>} tasks\n     * @param {Object} [scope]\n     * @returns {{on: Function}}\n     */\n    taskBuffer: function taskBuffer(tasks, scope) {\n        var slice = Array.prototype.slice, args = arguments, task, on = {}, error;\n\n        function next() {\n            if (task = tasks.shift()) {\n                task.apply(scope, [next].concat(slice.call(arguments, 0)));\n            } else {\n                on.done && on.done();\n            }\n        }\n\n        next.error = function (err) {\n            error = err || 'unknown error';\n            on.error && on.error(err, tasks);\n        };\n        setTimeout(function () {\n            next.apply(scope, slice.call(args, 2));\n        }, 0);\n        return {\n            on: function (evtName, fnc) {\n                on[evtName] = fnc;\n                if (error) {\n                    on.error && on.error(error, tasks);\n                } else if (tasks.length === 0) {\n                    on.done && on.done();\n                }\n            }\n        }\n    },\n    taskBufferAsync: function (tasks, finished, options) {\n        options = options || {};\n        var total = tasks.length, task;\n        var done = function (err) {\n            total--;\n            if (!total || err) {\n                finished && finished(err);\n            }\n        };\n        var run = function () {\n            if (!tasks.length) {\n                return console.warn(\"taskBufferAsync - no task appending\");\n            }\n            while (task = tasks.shift()) {\n                if ('then' in task) {\n                    task.then(done);\n                } else {\n                    task(done);\n                }\n            }\n        };\n        if (options.standby) {\n            return {\n                run: function () {\n                    return run();\n                }\n            };\n        }\n        return run();\n    },\n    /**\n     * @method shallowMixin\n     * @param {Object} dest\n     * @param {Object} source\n     * @returns {Object}\n     */\n    shallowMixin: function (dest, source) {\n        var keys = Object.keys(source), name;\n        while ((name = keys.shift())) {\n            dest[name] = source[name];\n        }\n        return dest;\n    },\n    /**\n     * @method mixin\n     * @param {Object} dest\n     * @param {Object} source\n     * @param {Function} [cpFunc]\n     * @returns {Object}\n     */\n    mixin: function (dest, source, cpFunc) {\n        var name, s, empty = {};\n        for (name in source) {\n            s = source[name];\n            if (!(name in dest) ||\n                (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                dest[name] = cpFunc ? cpFunc(s) : s;\n            }\n        }\n        return dest;\n    },\n    /**\n     * @method merge\n     * @param {Object} target\n     * @param {Object} source\n     * @param {Boolean} [nonStrict]\n     * @returns {*}\n     */\n    merge: function merge(target, source, nonStrict) {\n        var tval, sval, name;\n        for (name in source) {\n            if (!nonStrict && !source.hasOwnProperty(name)) {\n                continue;\n            }\n            tval = target[name];\n            sval = source[name];\n            if (tval !== sval) {\n                if (tval && typeof tval === 'object' && sval && typeof sval === 'object') {\n                    merge(tval, sval, nonStrict);\n                } else {\n                    target[name] = sval;\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * according to [The structured clone algorithm](https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm)\n     * @method deepClone\n     * @param {Object} oToBeCloned\n     * @returns {Object}\n     */\n    deepClone: function deepClone(oToBeCloned) {\n        if (!oToBeCloned || typeof oToBeCloned !== \"object\" || typeof(oToBeCloned) === 'function') {\n            // null, undefined, any non-object, or function\n            return oToBeCloned;\t// anything\n        }\n        var oClone, FConstr = oToBeCloned.constructor;\n\n        if (typeof(HTMLElement) !== 'undefined' && oToBeCloned instanceof HTMLElement) {\n            oClone = oToBeCloned.cloneNode(true);\n        } else if (oToBeCloned instanceof RegExp) {\n            oClone = new RegExp(oToBeCloned.source,\n                \"g\".substr(0, Number(oToBeCloned.global)) +\n                \"i\".substr(0, Number(oToBeCloned.ignoreCase)) +\n                \"m\".substr(0, Number(oToBeCloned.multiline)));\n        } else if (oToBeCloned instanceof Date) {\n            oClone = new Date(oToBeCloned.getTime());\n        } else {\n            oClone = FConstr ? new FConstr() : {};\n            for (var sProp in oToBeCloned) {\n                if (!oToBeCloned.hasOwnProperty(sProp)) {\n                    continue;\n                }\n                oClone[sProp] = deepClone(oToBeCloned[sProp]);\n            }\n        }\n        return oClone;\n    },\n    /**\n     * example:\n     *\n     *      isType('Object')({toto:1});\n     *\n     * @method isType\n     * @param {String} compare Object,String,Array,Function, etc.\n     * @returns {Function}\n     */\n    isType: function isType(compare) {\n        if (typeof compare === 'string' && /^\\w+$/.test(compare)) {\n            compare = '[object ' + compare + ']';\n        } else {\n            compare = Object.prototype.toString.call(compare);\n        }\n        return isType[compare] || (isType[compare] = function (o) {\n                return Object.prototype.toString.call(o) === compare;\n            });\n    },\n    /**\n     * guess real type\n     * @method realType\n     * @param str\n     * @returns {*}\n     */\n    realType: function (str) {\n        var xml;\n        if (typeof(str) !== 'string') {\n            return str;\n        }\n        str = str.trim();\n        if (str.trim() === \"\") {\n            return str;\n        }\n        var mapping = ['true', 'false', 'null', 'undefined'];\n        if (+str === 0 || +str) {\n            return +str;\n        }\n        if (!!~mapping.indexOf(str.toLowerCase())) {\n            return eval(str.toLowerCase());\n        }\n        try {\n            return JSON.parse(str);\n        } catch (e) {\n        }\n        xml = new DOMParser().parseFromString(str, 'text/xml');\n        if (!xml.getElementsByTagName('parsererror').length) {\n            return xml;\n        }\n        return str;\n    },\n    /**\n     * @method castType\n     * @param {*} value\n     * @param {String} type\n     * @returns {*}\n     */\n    castType: function (value, type) {\n        var typeMapping = {\n            \"string\": function (s) {\n                return s + \"\";\n            },\n            \"number\": function (n) {\n                return +n;\n            },\n            \"array\": function (arr) {\n                if (Array.isArray(arr)) {\n                    return arr;\n                }\n                try {\n                    var tmp = JSON.parse(arr);\n                    if (Array.isArray(tmp)) {\n                        return tmp;\n                    }\n                } catch (e) {\n\n                }\n                return arr.split(',');\n            },\n            \"boolean\": function (value) {\n                if (!value) {\n                    value = false;\n                } else {\n                    value = ('' + value).toLowerCase();\n                    value = value !== 'false';\n                }\n                return value;\n            },\n            \"object\": function (o) {\n                try {\n                    return JSON.parse(o);\n                } catch (e) {\n                    return null;\n                }\n            },\n            \"xml\": function (str) {\n                return new DOMParser().parseFromString(str, 'text/xml');\n            }\n        };\n        if (arguments.length === 0) {\n            return typeMapping;\n        }\n        return typeMapping[type] && typeMapping[type](value);\n    },\n    /**\n     * @method getProp\n     * @param {Array} parts\n     * @param {Boolean} create\n     * @param {Object} context\n     * @return Object\n     */\n    getProp: function (parts, create, context) {\n        var obj = context || window;\n        for (var i = 0, p; obj && (p = parts[i]); i++) {\n            obj = (p in obj ? obj[p] : (create ? obj[p] = {} : undefined));\n        }\n        return obj; // mixed\n    },\n    /**\n     * @method getObject\n     * @param {String} name\n     * @param {Boolean} create\n     * @param {Object} context\n     * @return Object\n     */\n    getObject: function (name, create, context) {\n        return this.getProp(name.split(\".\"), create, context); // Object\n    },\n\n    /**\n     * create a function with partial params\n     *\n     *      var fnc1 = function(a,b,c){return a+b+c;}, undef = {}.undef;\n     *      var fnc2 = partial(fnc1,null,undef,2,undef);\n     *      fnc2(1,3); //returns 6\n     *      fnc2(1,1); //returns 4\n     *\n     * @method partial\n     * @param {Function} fn\n     * @param {Object} [scope]\n     * @returns {Function}\n     */\n    partial: function partial(fn, scope) {\n\n        var args = slice.call(arguments, 2);\n        return function () {\n            var arg = 0, i = 0, l = args.length;\n            for (; i < l && arg < arguments.length; i++)\n                if (args[i] === undefined)\n                    args[i] = arguments[arg++];\n            return fn.apply(scope, args);\n        };\n    },\n    queryToObject: function (query, separator) {\n        separator = separator || '&';\n        query = query.trim();\n        if (!query) {\n            return;\n        }\n        var params = {};\n        query.split(separator).forEach(function (part) {\n            part = part.trim();\n            if (!part) {\n                return;\n            }\n            var p = part.split('=');\n            params[p[0].trim()] = p[1].trim();\n        });\n        return params;\n    },\n    objectToQuery: function (obj, separator, fromJson) {\n        separator = separator || '&';\n        var query = [];\n        Object.keys(obj).forEach(function (k) {\n            var o = obj[k], tmp;\n            if (typeof(o) === 'object' && fromJson) {\n                try {\n                    tmp = JSON.stringify(o);\n                } catch (e) {\n                    //\n                }\n                if (tmp !== undefined) {\n                    o = encodeURIComponent(tmp);\n                }\n            }\n            query.push(k + '=' + o);\n        });\n        return query.join(separator);\n    },\n    /**\n     * Return an a object with the url being parsed and fully qualified\n     * @param url to parse\n     * @param baseUrl [optional] a base url to use to fully qualify the url\n     */\n    parseUrl: function (url, baseUrl) {\n        var a = document.createElement('a');\n        // testons d'abord que l'url ne contient pas dÃ©jÃ  les doubles ://\n        if (!/:\\/\\//.test(url)) {\n            a.href = baseUrl ? baseUrl : location.href;\n        }\n        a.href += url;\n\n        return {\n            hash: a.hash,\n            host: a.host,\n            hostname: a.hostname,\n            href: a.href,\n            pathname: a.pathname,\n            port: a.port,\n            protocol: a.protocol,\n            search: a.search\n        };\n    },\n    htmlentities: function htmlentities(string, quote_style, charset, double_encode) {\n        //  discuss at: http://phpjs.org/functions/htmlentities/\n        // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        // improved by: nobbler\n        // improved by: Jack\n        // improved by: RafaÅ‚ Kukawski (http://blog.kukawski.pl)\n        // improved by: Dj (http://phpjs.org/functions/htmlentities:425#comment_134018)\n        // bugfixed by: Onno Marsman\n        // bugfixed by: Brett Zamir (http://brett-zamir.me)\n        //    input by: Ratheous\n        //  depends on: get_html_translation_table\n        //   example 1: htmlentities('Kevin & van Zonneveld');\n        //   returns 1: 'Kevin &amp; van Zonneveld'\n        //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\");\n        //   returns 2: 'foo&#039;bar'\n\n        var hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style),\n            symbol = '';\n        string = string == null ? '' : string + '';\n\n        if (!hash_map) {\n            return false;\n        }\n\n        if (quote_style && quote_style === 'ENT_QUOTES') {\n            hash_map[\"'\"] = '&#039;';\n        }\n\n        if (!!double_encode || double_encode == null) {\n            for (symbol in hash_map) {\n                if (hash_map.hasOwnProperty(symbol)) {\n                    string = string.split(symbol)\n                        .join(hash_map[symbol]);\n                }\n            }\n        } else {\n            string = string.replace(/([\\s\\S]*?)(&(?:#\\d+|#x[\\da-f]+|[a-zA-Z][\\da-z]*);|$)/g, function (ignore, text, entity) {\n                for (symbol in hash_map) {\n                    if (hash_map.hasOwnProperty(symbol)) {\n                        text = text.split(symbol)\n                            .join(hash_map[symbol]);\n                    }\n                }\n\n                return text + entity;\n            });\n        }\n\n        return string;\n    },\n    get_html_translation_table: function get_html_translation_table(table, quote_style) {\n        //  discuss at: http://phpjs.org/functions/get_html_translation_table/\n        // original by: Philip Peterson\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        // bugfixed by: noname\n        // bugfixed by: Alex\n        // bugfixed by: Marco\n        // bugfixed by: madipta\n        // bugfixed by: Brett Zamir (http://brett-zamir.me)\n        // bugfixed by: T.Wild\n        // improved by: KELAN\n        // improved by: Brett Zamir (http://brett-zamir.me)\n        //    input by: Frank Forte\n        //    input by: Ratheous\n        //        note: It has been decided that we're not going to add global\n        //        note: dependencies to php.js, meaning the constants are not\n        //        note: real constants, but strings instead. Integers are also supported if someone\n        //        note: chooses to create the constants themselves.\n        //   example 1: get_html_translation_table('HTML_SPECIALCHARS');\n        //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n        var entities = {},\n            hash_map = {},\n            decimal;\n        var constMappingTable = {},\n            constMappingQuoteStyle = {};\n        var useTable = {},\n            useQuoteStyle = {};\n\n        // Translate arguments\n        constMappingTable[0] = 'HTML_SPECIALCHARS';\n        constMappingTable[1] = 'HTML_ENTITIES';\n        constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n        constMappingQuoteStyle[2] = 'ENT_COMPAT';\n        constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n        useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n        useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() :\n            'ENT_COMPAT';\n\n        if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n            throw new Error('Table: ' + useTable + ' not supported');\n            // return false;\n        }\n\n        entities['38'] = '&amp;';\n        if (useTable === 'HTML_ENTITIES') {\n            entities['160'] = '&nbsp;';\n            entities['161'] = '&iexcl;';\n            entities['162'] = '&cent;';\n            entities['163'] = '&pound;';\n            entities['164'] = '&curren;';\n            entities['165'] = '&yen;';\n            entities['166'] = '&brvbar;';\n            entities['167'] = '&sect;';\n            entities['168'] = '&uml;';\n            entities['169'] = '&copy;';\n            entities['170'] = '&ordf;';\n            entities['171'] = '&laquo;';\n            entities['172'] = '&not;';\n            entities['173'] = '&shy;';\n            entities['174'] = '&reg;';\n            entities['175'] = '&macr;';\n            entities['176'] = '&deg;';\n            entities['177'] = '&plusmn;';\n            entities['178'] = '&sup2;';\n            entities['179'] = '&sup3;';\n            entities['180'] = '&acute;';\n            entities['181'] = '&micro;';\n            entities['182'] = '&para;';\n            entities['183'] = '&middot;';\n            entities['184'] = '&cedil;';\n            entities['185'] = '&sup1;';\n            entities['186'] = '&ordm;';\n            entities['187'] = '&raquo;';\n            entities['188'] = '&frac14;';\n            entities['189'] = '&frac12;';\n            entities['190'] = '&frac34;';\n            entities['191'] = '&iquest;';\n            entities['192'] = '&Agrave;';\n            entities['193'] = '&Aacute;';\n            entities['194'] = '&Acirc;';\n            entities['195'] = '&Atilde;';\n            entities['196'] = '&Auml;';\n            entities['197'] = '&Aring;';\n            entities['198'] = '&AElig;';\n            entities['199'] = '&Ccedil;';\n            entities['200'] = '&Egrave;';\n            entities['201'] = '&Eacute;';\n            entities['202'] = '&Ecirc;';\n            entities['203'] = '&Euml;';\n            entities['204'] = '&Igrave;';\n            entities['205'] = '&Iacute;';\n            entities['206'] = '&Icirc;';\n            entities['207'] = '&Iuml;';\n            entities['208'] = '&ETH;';\n            entities['209'] = '&Ntilde;';\n            entities['210'] = '&Ograve;';\n            entities['211'] = '&Oacute;';\n            entities['212'] = '&Ocirc;';\n            entities['213'] = '&Otilde;';\n            entities['214'] = '&Ouml;';\n            entities['215'] = '&times;';\n            entities['216'] = '&Oslash;';\n            entities['217'] = '&Ugrave;';\n            entities['218'] = '&Uacute;';\n            entities['219'] = '&Ucirc;';\n            entities['220'] = '&Uuml;';\n            entities['221'] = '&Yacute;';\n            entities['222'] = '&THORN;';\n            entities['223'] = '&szlig;';\n            entities['224'] = '&agrave;';\n            entities['225'] = '&aacute;';\n            entities['226'] = '&acirc;';\n            entities['227'] = '&atilde;';\n            entities['228'] = '&auml;';\n            entities['229'] = '&aring;';\n            entities['230'] = '&aelig;';\n            entities['231'] = '&ccedil;';\n            entities['232'] = '&egrave;';\n            entities['233'] = '&eacute;';\n            entities['234'] = '&ecirc;';\n            entities['235'] = '&euml;';\n            entities['236'] = '&igrave;';\n            entities['237'] = '&iacute;';\n            entities['238'] = '&icirc;';\n            entities['239'] = '&iuml;';\n            entities['240'] = '&eth;';\n            entities['241'] = '&ntilde;';\n            entities['242'] = '&ograve;';\n            entities['243'] = '&oacute;';\n            entities['244'] = '&ocirc;';\n            entities['245'] = '&otilde;';\n            entities['246'] = '&ouml;';\n            entities['247'] = '&divide;';\n            entities['248'] = '&oslash;';\n            entities['249'] = '&ugrave;';\n            entities['250'] = '&uacute;';\n            entities['251'] = '&ucirc;';\n            entities['252'] = '&uuml;';\n            entities['253'] = '&yacute;';\n            entities['254'] = '&thorn;';\n            entities['255'] = '&yuml;';\n        }\n\n        if (useQuoteStyle !== 'ENT_NOQUOTES') {\n            entities['34'] = '&quot;';\n        }\n        if (useQuoteStyle === 'ENT_QUOTES') {\n            entities['39'] = '&#39;';\n        }\n        entities['60'] = '&lt;';\n        entities['62'] = '&gt;';\n\n        // ascii decimals to real symbols\n        for (decimal in entities) {\n            if (entities.hasOwnProperty(decimal)) {\n                hash_map[String.fromCharCode(decimal)] = entities[decimal];\n            }\n        }\n\n        return hash_map;\n    },\n    /**\n     * support commonjs and promise\n     * @method async\n     * @param {Function} makeGenerator a generator function which returns promise\n     * @returns {Function}\n     */\n    async: function async(makeGenerator) {\n        return function () {\n            var generator = makeGenerator.apply(this, arguments);\n            function handle(result) { // { done: [Boolean], value: [Object] }\n                if (result.done) {\n                    return result.value;\n                }\n                if (result.value.then) {\n                    return result.value.then(function (res) {\n                        return handle(generator.next(res));\n                    }, function (err) {\n                        return handle(generator.throw(err));\n                    });\n                } else {\n                    return result.value(function (err, res) {\n                        if (err) {\n                            handle(generator.throw(err));\n                        } else {\n                            handle(generator.next(res));\n                        }\n                    });\n                }\n            }\n            return handle(generator.next());\n        }\n    }\n};\n"],"sourceRoot":"/source/"}