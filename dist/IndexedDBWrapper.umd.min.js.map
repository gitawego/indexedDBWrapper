{"version":3,"sources":["BaseEvented.js","CustomEvent.js","IDBStore.js","IndexedDBWrapper.js","helper.js"],"names":[],"mappings":"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","file":"IndexedDBWrapper.umd.min.js","sourcesContent":["import CustomEvent from './CustomEvent';\nimport {helper} from './helper';\n\nlet slice = Array.prototype.slice;\n\n/**\n * evented base component, use CustomEvent as compositor\n * @class com.sesamtv.core.util.BaseEvented\n * @requires com.sesamtv.core.util.CustomEvent\n */\nexport default class BaseEvented {\n    constructor() {\n        /**\n         * @property event\n         * @type {com.sesamtv.core.util.CustomEvent}\n         */\n        this.event = new CustomEvent();\n\n        helper.applyIf(this, {\n            /**\n             * named listener handlers\n             * @property evts\n             * @type {Object}\n             */\n            evts: {},\n            /**\n             * anonymous listener handlers\n             * @property connect\n             * @type {Array}\n             */\n            connect: [],\n            config: {}\n        });\n    }\n\n    /**\n     * @method on\n     * @param {String} evt\n     * @param {Function} fnc\n     * @param {Boolean} [once]\n     * @returns {{id: Number, remove: Function}}\n     */\n    on(evt, fnc, once) {\n        return this.event[once ? 'once' : 'on'](evt, fnc.bind(this));\n    }\n\n    /**\n     * @method once\n     * @param {String} evt\n     * @param {Function} fnc\n     * @returns {{id: Number, remove: Function}}\n     */\n    once(evt, fnc) {\n        return this.on(evt, fnc.bind(this), true);\n    }\n\n    /**\n     * @method emit\n     * @returns {Array}\n     */\n    emit() {\n        return this.event.emit.apply(this.event, arguments);\n    }\n\n    /**\n     * @method broadcast\n     * @param {String} wildcard\n     */\n    broadcast(wildcard) {\n        return this.event.broadcast.apply(this.event, arguments);\n    }\n\n    /**\n     * set a property\n     * @method set\n     * @param k\n     * @param v\n     */\n    set(k, v) {\n        if (k === 'config') {\n            return this.setConfigs(v);\n        }\n        if (k in this && this[k] === v) {\n            return;\n        }\n        var res = {\n            newValue: v\n        };\n        if (k in this) {\n            res.oldValue = isObject(this[k]) ? helper.deepClone(this[k]) : this[k];\n        }\n        this[k] = v;\n        this.emit(k, res);\n\n    }\n\n    /**\n     * @method setConfigs\n     * @param {Object} v\n     */\n    setConfigs(v) {\n        Object.keys(v).forEach(function (k) {\n            this.setConfig(k, v[k]);\n        }, this);\n    }\n\n    /**\n     * set a config property\n     * @method setConfig\n     * @param {String} k\n     * @param {*} v\n     */\n    setConfig(k, v) {\n        if (arguments.length === 1) {\n            return this.setConfigs(k);\n        }\n        if (k in this.config && this.config[k] === v) {\n            return;\n        }\n        var res = {\n            key: k,\n            newValue: v\n        };\n        if (k in this.config) {\n            res.oldValue = isObject(this.config[k]) ? helper.deepClone(this.config[k]) : this.config[k];\n        }\n        this.config[k] = v;\n        this.emit('config', res);\n        this.emit('config/' + k, res);\n    }\n\n    /**\n     * @method getConfig\n     * @param {String} k\n     * @returns {*}\n     */\n    getConfig(k) {\n        var res = this.config[k], getter = k + 'Getter';\n        if (this.config[getter]) {\n            return this.config[getter](res, this);\n        }\n        return res;\n    }\n\n    removeEvts(evts) {\n        evts.forEach(function (evt) {\n            if (this.evts[evt]) {\n                this.evts[evt].remove();\n                delete this.evts[evt];\n            }\n        }, this);\n    }\n\n    /**\n     * @method destroy\n     */\n    destroy() {\n\n        this.connect.forEach(function (c) {\n            c.remove();\n        });\n        this.connect.length = 0;\n        Object.keys(this.evts).forEach(function (e) {\n            this.evts[e].remove();\n        }, this);\n        this.evts = {};\n        this.event.purgeListeners();\n        this.$purgeSuper && this.$purgeSuper();\n    }\n}\n/**\n * eventize an object by composition\n * @method eventize\n * @static\n * @param {Object} self\n * @returns {Object}\n */\nBaseEvented.eventize = function (self) {\n    self.event = new CustomEvent();\n    helper.applyIf(self, {\n        evts: {},\n        connect: [],\n        config: {}\n    });\n    var proto = BaseEvented.prototype, supers = {};\n    Object.keys(proto).forEach(function (k) {\n        if (k in self && typeof(self[k]) === 'function') {\n            supers[k] = proto[k];\n        } else {\n            self[k] = proto[k];\n        }\n    });\n    self.$super = function (k) {\n        return supers[k] && supers[k].apply(this, slice.call(arguments, 1));\n    };\n    self.$purgeSuper = function () {\n        supers = null;\n    };\n    return self;\n};\n","\"use strict\";\nlet slice = Array.prototype.slice,\n    glb = typeof(window) !== 'undefined' ? window : global;\n\nlet uuid = (typeof(glb.crypto) != 'undefined' &&\ntypeof(glb.crypto.getRandomValues) != 'undefined') ?\n    function () {\n        // If we have a cryptographically secure PRNG, use that\n        // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n        var buf = new Uint16Array(8);\n        glb.crypto.getRandomValues(buf);\n        var S4 = function (num) {\n            var ret = num.toString(16);\n            while (ret.length < 4) {\n                ret = \"0\" + ret;\n            }\n            return ret;\n        };\n        return (S4(buf[0]) + S4(buf[1]) + \"-\" + S4(buf[2]) + \"-\" + S4(buf[3]) + \"-\" + S4(buf[4]) + \"-\" + S4(buf[5]) + S4(buf[6]) + S4(buf[7]));\n    } : function uuid(tpl) {\n    tpl = tpl || 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    var d = (new Date()).getTime();\n    return tpl.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n};\nlet mixin = function mixin(dest, source) {\n    var name, s, empty = {};\n    for (name in source) {\n        s = source[name];\n        if (!(name in dest) ||\n            (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n            dest[name] = s;\n        }\n    }\n    return dest;\n};\n/**\n * @class com.sesamtv.core.util.CustomEvent\n * @cfg {Object} [args]\n * @cfg {String} [args.channelSeparator]\n */\nexport default class CustomEvent {\n    constructor(args) {\n        /**\n         * @property _listeners\n         * @type {Object.<String,Array>}\n         * @private\n         */\n        this._listeners = {};\n        this.channelSeparator = '/';\n        args && mixin(this, args);\n    }\n\n    /**\n     * @method buildListener\n     * @private\n     * @param {Function|Object} listener\n     * @return {{id:String,content:Function}}\n     */\n    buildListener(listener) {\n        var _id = '#Listener:' + uuid();\n        if (typeof listener === 'function') {\n            listener = {\n                id: _id,\n                content: listener\n            };\n        } else {\n            if (!listener.id) {\n                listener.id = _id;\n            }\n        }\n        return listener;\n    }\n\n    /**\n     * @method on\n     * @param {String} eventName\n     * @param {Function|Object} listener\n     * @param {String} listener.id if listener is an object, define listener id\n     * @param {Function} listener.content if listener is an object, define function\n     * @return {{id:Number,remove:Function}}\n     */\n    on(eventName, listener) {\n        var self = this;\n        if (typeof this._listeners[eventName] === \"undefined\") {\n            this._listeners[eventName] = [];\n        }\n        listener = this.buildListener(listener);\n        if (this.hasListener(eventName, listener.id)) {\n            throw new Error('listener id ' + listener.id + ' duplicated');\n        }\n        this._listeners[eventName].push(listener);\n        return {\n            remove: function () {\n                return self.off(eventName, listener.id);\n            },\n            id: listener.id\n        };\n    }\n\n    /**\n     * listener is triggered only once\n     * @method once\n     * @param {String} eventName\n     * @param {Function|Object} listener\n     * @param {Function} listener.content\n     * @param {String} listener.id\n     * @return {{id:Number,remove:Function}}\n     */\n    once(eventName, listener) {\n        var self = this;\n        listener = this.buildListener(listener);\n        var origContent = listener.content;\n        listener.content = function () {\n            self.off(eventName, listener.id);\n            origContent.apply(self, arguments);\n        };\n        return this.on(eventName, listener);\n    }\n\n    /**\n     * listener is removed when the callback return true\n     *\n     *      this.when('click',function(node){\n             *          return node.id === 'container';\n             *      });\n     *\n     * @method when\n     * @param {String} event\n     * @param {Function} callback\n     * @returns {*}\n     */\n    when(event, callback) {\n        var self = this;\n\n        function check() {\n            if (callback.apply(this, arguments)) {\n                self.off(event, check);\n            }\n        }\n\n        check.listener = callback;\n        self.on(event, check);\n        return this;\n    }\n\n    /**\n     * broadcast message to events, support wildcard (* or ?)\n     *\n     *      this.broadcast('channel1/*',message);\n     *      this.broadcast('channel1/????/event1',message);\n     *      this.broadcast('channel1/event1',msg1,msg2);\n     *\n     * @method broadcast\n     * @param {String} wildcard\n     */\n    broadcast(wildcard) {\n        var params = slice.call(arguments, 1), evtNames = this.getEventNamesByWildcard(wildcard),\n            i = 0, l = evtNames.length, res = [];\n        for (; i < l; i++) {\n            res.push(this.emit.apply(this, [evtNames[i]].concat(params)));\n        }\n        return res;\n    }\n\n    /**\n     * @method getEventNamesByWildcard\n     * @param {String} wildcard\n     * @return {Array.<String>}\n     */\n    getEventNamesByWildcard(wildcard) {\n        var evts = [],\n            self = this,\n            reg = wildcard.replace(/(\\?)/g, function (str, m) {\n                return '[\\\\w\\'-]{1}';\n            }).replace(/\\*/g, function (key, idx, str) {\n                return str.charAt(idx + 1) !== '' ? '([\\\\S\\\\s][^' + self.channelSeparator + ']*)' : '.*?';\n            });\n        JSON.stringify(Object.keys(this._listeners)).replace(new RegExp('\"(' + reg + ')\"', 'g'), function (ignore, eventName) {\n            evts.push(eventName);\n        });\n        return evts;\n    }\n\n    /**\n     * example:\n     *\n     *      this.emit('evtName');\n     *      this.emit('evtName',params);\n     *      this.emit('evtName',param1,param2);\n     *\n     * @method emit\n     * @param {String} eventType\n     * @return {Array}\n     */\n    emit(eventType) {\n        var params, res = [], listeners, len;\n        if (!eventType) {  //falsy\n            throw new Error(\"Event object missing 'eventName' property.\");\n        }\n        params = slice.call(arguments, 1);\n        if (this._listeners[eventType] instanceof Array) {\n            listeners = this._listeners[eventType];\n            len = listeners.length;\n            //decrease the length (instead of increasing from 0)\n            // in case listener is removed while emit method is running\n            while (len--) {\n                if (listeners[len]) {\n                    res.push({\n                        id: listeners[len].id,\n                        result: listeners[len].content.apply(this, params)\n                    });\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * emit to a particular listener\n     *\n     *      this.emitTo('eventName','listenerId',param1,param2);\n     *\n     * @method emitTo\n     * @param eventType\n     * @param listenerId\n     * @returns {Array}\n     */\n    emitTo(eventType, listenerId) {\n        if (!eventType) {  //falsy\n            throw new Error(\"Event object missing 'eventName' property.\");\n        }\n        var params = slice.call(arguments, 2), res = [], listeners, l;\n        if (this._listeners[eventType] instanceof Array) {\n            listeners = this._listeners[eventType];\n            l = listeners.length;\n            while (l--) {\n                if (listeners[l] && listeners[l].id === listenerId) {\n                    res.push({\n                        id: listenerId,\n                        result: listeners[l].content.apply(this, params)\n                    });\n                    break;\n                }\n            }\n            if (listenerId && !res.length) {\n                throw new Error('listener ' + listenerId + ' is not found in event ' + eventType);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * remove a listener\n     * @method off\n     * @param {String} eventName\n     * @param {String|Function} listener a listener id or listener handler\n     */\n    off(eventName, listener) {\n        var res;\n        if (res = this.hasListener(eventName, listener)) {\n            this._listeners[eventName].splice(res.index, 1);\n        }\n    }\n\n    hasEvent(eventName) {\n        if (!eventName) {\n            return Object.keys(this._listeners).length > 0;\n        }\n        return eventName in this._listeners;\n    }\n\n    eventList() {\n        return Object.keys(this._listeners);\n    }\n\n    /**\n     * @method hasListener\n     * @param {String} eventName\n     * @param {String|Function} listener\n     * @return {Object}\n     */\n    hasListener(eventName, listener) {\n        var listenerType = typeof(listener) === 'string' ? 'id' : 'content', listeners, i = 0, len;\n        if ((listeners = this._listeners[eventName]) && (len = listeners.length) > 0) {\n            for (; i < len; i++) {\n                if (listeners[i][listenerType] === listener) {\n                    return {\n                        index: i\n                    };\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @method hasListeners\n     * @param {String} eventName event name\n     * @return {Boolean}\n     */\n    hasListeners(eventName) {\n        if (this._listeners[eventName] instanceof Array) {\n            return this._listeners[eventName].length > 0;\n        }\n        return false;\n    }\n\n    /**\n     * @method getListeners\n     * @param {string} eventName event name\n     * @return {Array.<Object>}\n     */\n    getListeners(eventName) {\n        if (this._listeners[eventName] instanceof Array) {\n            return this._listeners[eventName];\n        }\n    }\n\n    /**\n     * @method purgeListeners\n     * @param {String} [evtName] if evtName is undefined, remove all the events\n     */\n    purgeListeners(evtName) {\n        if (evtName) {\n            delete this._listeners[evtName];\n        } else {\n            delete this._listeners;\n            this._listeners = {};\n        }\n    }\n}\n","export default\nclass IDBStore {\n    constructor(db, storeName) {\n        this.db = db;\n        this.storeName = storeName;\n    }\n\n    clear() {\n        var store = this.db.getStore(this.storeName, 'readwrite');\n        return new Promise(function (resolve, reject) {\n            var req = store.clear();\n            req.onsuccess = resolve;\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    drop() {\n        return new Promise((resolve, reject)=> {\n            var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n                req = itemStore['delete']();\n            req.onsuccess = resolve;\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    insert(item) {\n        var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n            req = itemStore.add(item);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = function(res){\n                item[itemStore.keyPath] = this.result;\n                resolve(item);\n            };\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    openTransaction(mode) {\n        return this.db.openTransaction(this.storeName, mode);\n    }\n\n    upsert(query, data, merge) {\n        var tasks = [], hasData;\n        return new Promise((resolve, reject) => {\n            this.query(query, {\n                openMode: 'readwrite',\n                onCursor: (cursor, store, objectStore) => {\n                    hasData = true;\n                    if (merge) {\n                        data = this.db.mergeData(cursor.value, data);\n                    }\n                    data[objectStore.keyPath] = cursor.primaryKey;\n                    tasks.push(this.cursorOperation(cursor, 'update', data));\n                }\n            }).then((res)=> {\n                if (!hasData) {\n                    var objectStore = this.db.getStore(this.storeName, 'readwrite');\n                    tasks.push(new Promise(function (resolve, reject) {\n                        var req = objectStore.add(data);\n                        req.onsuccess = function(){\n                            data[objectStore.keyPath] = this.result;\n                            resolve(data);\n                        };\n                        req.onerror = reject;\n                    }));\n                }\n                if (!tasks.length) {\n                    return resolve();\n                }\n                Promise.all(tasks).then(resolve, reject);\n            }, reject);\n        });\n    }\n\n    bulk(items) {\n        return this.db.bulk(items, this.storeName);\n    }\n\n    removeByKey(keyPathId) {\n        var itemStore = this.db.getStore(this.storeName, 'readwrite'),\n            req = itemStore['delete'](keyPathId);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = function(){\n                resolve(this.result);\n            };\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    remove(query) {\n        var tasks = [];\n        return new Promise((resolve, reject) => {\n            this.query(query, {\n                openMode: 'readwrite',\n                onCursor: (cursor) => {\n                    if (cursor) {\n                        tasks.push(this.cursorOperation(cursor, 'delete'));\n                    }\n                }\n            }).then(function () {\n                if (!tasks.length) {\n                    return resolve();\n                }\n                Promise.all(tasks).then(resolve, reject);\n            }, reject);\n        });\n    }\n\n    cursorOperation(cursor, action, data) {\n        return new Promise(function (resolve, reject) {\n            var req;\n            if (action !== 'delete') {\n                req = cursor[action](data);\n            } else {\n                req = cursor[action]();\n            }\n            req.onsuccess = function(){\n                resolve(this.source.value);\n            };\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    findByKey(keyValue) {\n        var req = this.db.getStore(this.storeName, 'readwrite').get(keyValue);\n        return new Promise(function (resolve, reject) {\n            req.onsuccess = function(){\n                resolve(this.result);\n            };\n            req.onerror = function(evt){\n                reject(evt.target.error);\n            };\n        });\n    }\n\n    buildRange(query) {\n        var range;\n        query = query || {};\n        if ('eq' in query) {\n            range = IDBKeyRange.only(query.eq);\n        } else if ('gte' in query && 'lte' in query) {\n            range = IDBKeyRange.bound(query.gte, query.lte, true, true);\n        } else if ('gte' in query && 'lt' in query) {\n            range = IDBKeyRange.bound(query.gte, query.lt, true, false);\n        } else if ('gt' in query && 'lt' in query) {\n            range = IDBKeyRange.bound(query.gt, query.lt, false, false);\n        } else if ('gt' in query && 'lte' in query) {\n            range = IDBKeyRange.bound(query.gt, query.lte, false, true);\n        } else if ('gt' in query) {\n            range = IDBKeyRange.lowerBound(query.gt);\n        } else if ('gte' in query) {\n            range = IDBKeyRange.lowerBound(query.gte, true);\n        } else if ('lt' in query) {\n            range = IDBKeyRange.upperBound(query.lt);\n        } else if ('lte' in query) {\n            range = IDBKeyRange.upperBound(query.lte, true);\n        }\n        return range;\n    }\n\n    findOne(query) {\n        return new Promise((resolve, reject) => {\n            this.query(query, {\n                onCursor: function () {\n                    return false;\n                }\n            }).then(function (res) {\n                resolve(res[0]);\n            }, reject);\n        });\n    }\n\n    find(query) {\n        return this.query(query);\n    }\n\n    /**\n     *\n     *  query({\n     *      \"eq\":\"admin\",\n     *      \"index\":\"username\",\n     *      \"filter\":[\"$record.total > 10\"]\n     *  });\n     *\n     * @method query\n     * @param {Object} query\n     * @param {*} query.eq only\n     * @param {*} query.gt lowerBound\n     * @param {*} query.gte lowerBound with true\n     * @param {*} query.lt upperBound\n     * @param {*} query.lte upperBound with true\n     * @param {Array|Function} query.filter\n     * @param {String} [query.order] prev,prevunique,next,nextunique\n     * @param {Object} [opt]\n     * @param {String} [opt.openMode='readonly'] readwrite or readonly\n     * @param {Function} [opt.onCursor]\n     */\n    query(query, opt) {\n        opt = opt || {};\n        opt.openMode = opt.openMode || 'readonly';\n        query = query || {};\n        query.order = query.order || 'next';\n        var trans = this.openTransaction(opt.openMode),\n            objectStore = trans.objectStore(this.storeName), reqStore,\n            self = this, collect = [], req, range;\n        range = this.buildRange(query);\n        reqStore = objectStore;\n        if (range) {\n            if (query.index && objectStore.indexNames.contains(query.index)) {\n                reqStore = objectStore.index(query.index);\n                req = reqStore.openCursor(range, query.order);\n            } else {\n                req = reqStore.openCursor(range, query.order);\n            }\n        } else {\n            req = reqStore.openCursor();\n        }\n\n        var deferred = new Promise((resolve, reject)=> {\n            req.onsuccess = function (event) {\n                var queryCursor = event.target.result, next = true;\n                if (queryCursor) {\n                    if (query.filter) {\n                        if (!self.queryFilter(query.filter, queryCursor)) {\n                            return queryCursor['continue']();\n                        }\n                    }\n                    if (opt.onCursor) {\n                        next = opt.onCursor(queryCursor, reqStore, objectStore) !== false;\n                    }\n                    collect.push(queryCursor.value);\n                    if (next) {\n                        queryCursor['continue']();\n                    } else {\n                        resolve(collect);\n                    }\n                } else {\n                    resolve(collect);\n                }\n            };\n\n            req.onerror = function (evt) {\n                console.warn(evt.target.error.message, evt.target.error.name);\n                reject(evt.target.error);\n            };\n        });\n        deferred.abort = function () {\n            req.readyState !== 'done' && trans.abort();\n        };\n        return deferred;\n    }\n\n    queryFilter(filter, cursor) {\n        if (typeof(filter) === 'function') {\n            return filter(cursor);\n        }\n        var value = cursor.value;\n        return new Function('$record', 'return ' + filter.join(' && ') + ' ;')(value);\n    }\n}\n","import BaseEvented from './BaseEvented';\nimport {helper} from './helper';\nimport IDBStore from './IDBStore';\n/**\n * this class depends on axemclion/IndexedDBShim\n * @class com.sesamtv.core.util.store.IndexedDBStore\n * @extends com.sesamtv.core.util.BaseEvented\n */\nexport default\nclass IndexedDBWrapper extends BaseEvented {\n\n    constructor(config) {\n        this.config = {\n            dbName: '',\n            version: 1,\n            stores: {},\n            operatorMapping: {\n                \"eq\": \"=\",\n                \"gt\": \">\",\n                \"gte\": \">=\",\n                \"lt\": \"<\",\n                \"lte\": \"<=\"\n            },\n            forceShim: false,\n            timeFormat: /^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$/,\n            schema: {}\n        };\n        config && helper.mixin(this.config, config);\n        super();\n\n\n    }\n\n    indexedDB() {\n        return window.indexedDB\n            || window.msIndexedDB\n            || window.mozIndexedDB\n            || window.webkitIndexedDB;\n    }\n\n    open(dbConfig) {\n        var self = this;\n        this.config.dbName = dbConfig.dbName;\n        this.config.version = dbConfig.version;\n        return new Promise((resolve, reject) => {\n            var req = this.indexedDB().open(this.config.dbName, this.config.version);\n            req.onsuccess = function (evt) {\n                // Better use \"this\" than \"req\" to get the result to avoid problems with\n                // garbage collection.\n                // db = req.result;\n                self.db = this.result;\n                self.db.onerror = function (evt) {\n                    //global error\n                    self.emit('error', evt.target.error.message);\n                };\n                resolve(self.db);\n\n            };\n            req.onerror = function (evt) {\n                reject(evt.target.error);\n            };\n            req.onupgradeneeded = function (e) {\n                console.log('onupgradeneeded');\n                self.db = this.result;\n                if (!dbConfig.schema || dbConfig.schema.length === 0) {\n                    throw new Error('no schema defined, can not upgrade');\n                }\n                if (e.oldVersion >= dbConfig.schema[dbConfig.schema.length - 1].version) {\n                    return;\n                }\n                self.config.oldVersion = e.oldVersion;\n                self.schema(dbConfig.schema);\n            };\n        });\n    }\n\n    schema(schemas) {\n        this.config.schema = schemas;\n        schemas.forEach(function (schema) {\n            if (schema.version > this.config.oldVersion) {\n                this._schema(schema.schema);\n            }\n        }, this);\n    }\n\n    /**\n     *\n     * @param schema\n     */\n    _schema(schema) {\n        var thisDB = this.db;\n        Object.keys(schema).forEach(function (storeName) {\n            var storeConf = schema[storeName], objectStore;\n            if (thisDB.objectStoreNames.contains(storeName)) {\n                objectStore = thisDB.transaction([storeName], 'readwrite').objectStore(storeName);\n                //for upgrading\n                if (storeConf.alter) {\n                    storeConf.alter.forEach(function (alter) {\n                        if (alter.param) {\n                            objectStore[alter.action].apply(objectStore, alter.param);\n                        } else {\n                            objectStore[alter.action]();\n                        }\n                    });\n                }\n            } else {\n                objectStore = thisDB.createObjectStore(storeName, storeConf.keyPath);\n            }\n            if (storeConf.indexes) {\n                Object.keys(storeConf.indexes).forEach(function (idxName) {\n                    var idxConf = storeConf.indexes[idxName];\n                    objectStore.createIndex(idxName, idxConf.index, {\n                        unique: idxConf.unique\n                    });\n                });\n            }\n        }, this);\n    }\n\n    store(storeName) {\n        if (this.config.stores[storeName]) {\n            return this.config.stores[storeName];\n        }\n        if (this.db.objectStoreNames.contains(storeName)) {\n            return this.config.stores[storeName] = new IDBStore(this, storeName);\n        }\n    }\n\n    /**\n     * items format:\n     *\n     *\n     * {\"put\":[],\"delete\":[],\"upsert\":[{\n     *  \"index\":\"myIndex\",\n     *  \"key\":[\"_id\",\"username\"]\n     *  \"data\":{\n     *      \"_id\":123123,\n     *      \"username\":\"admin\",\n     *      \"key\":null\n     *  },\n     *  \"merge\":true\n     * }]}\n     *\n     * or\n     *\n     *      [\n     *          {method:'add',data:{...}},\n     *          {method:'delete',data:keyPathValue},\n     *          {method:'delete',data:indexValue,index:'id'}\n     *      ]\n     *\n     * @param {Object} items\n     * @param {String} [storeName]\n     * @returns {Promise}\n     */\n    bulk(items, storeName) {\n        var self = this;\n        return new Promise((resolve, reject)=> {\n            var parsedItems = [], item,\n                itemStore = this.getStore(storeName, 'readwrite', {\n                    onerror: function (evt) {\n                        var error = evt.target.error;\n                        error.item = item;\n                        reject(error);\n                    }\n                }), res = [];\n\n            if (Array.isArray(items)) {\n                parsedItems = items;\n            } else {\n                Object.keys(items).forEach(function (method) {\n                    parsedItems = parsedItems.concat(items[method].map(function (data) {\n                        return {\n                            method: method,\n                            data: data\n                        };\n                    }));\n                });\n            }\n\n            function putNext(evt) {\n                var req;\n                if (evt) {\n                    res.push(this.result);\n                }\n                if (parsedItems.length) {\n                    item = parsedItems.shift();\n                    if (item.method === 'upsert') {\n                        if (item.data.index) {\n                            if (itemStore.indexNames.contains(item.data.index)) {\n                                if (!item.data.key) {\n                                    item.data.key = item.data.index;\n                                }\n                                req = itemStore.index(item.data.index)\n                                    .get(Array.isArray(item.data.key) ? item.data.key.map(function (k) {\n                                        return item.data.data[k];\n                                    }) : item.data.data[item.data.key]);\n\n                            } else {\n                                return reject(new Error('index name not found'));\n                            }\n                        } else {\n                            req = itemStore.get(item.data.data[itemStore.keyPath]);\n                        }\n                        req.onsuccess = function (evt) {\n                            if (this.result) {\n                                if (item.data.merge) {\n                                    item.data.data = self.mergeData(this.result, item.data.data);\n                                } else {\n                                    if (item.data.key) {\n                                        if (Array.isArray(item.data.key)) {\n                                            item.data.key.forEach(function (k) {\n                                                item.data.data[k] = this.result[k];\n                                            }, this);\n                                        } else {\n                                            item.data.data[item.data.key] = this.result[item.data.key];\n                                        }\n                                    }\n                                    item.data.data[itemStore.keyPath] = this.result[itemStore.keyPath];\n                                }\n                            }\n                            itemStore.put(item.data.data).onsuccess = putNext;\n                        }\n                    } else {\n                        if (item.index) {\n                            req = itemStore.index(item.index)[item.method](item.data);\n                        } else {\n                            req = itemStore[item.method](item.data);\n                        }\n                        req.onsuccess = putNext;\n                    }\n\n                } else {\n                    resolve({\n                        results: res,\n                        store: storeName\n                    });\n                }\n            }\n\n            putNext();\n        });\n    }\n\n    getStore(storeName, mode, opt) {\n        var trans = this.openTransaction(storeName, mode, opt);\n        return trans.objectStore(storeName);\n    }\n\n    mergeData(src, data) {\n        Object.keys(data).forEach(function (k) {\n            if (data[k] === null) {\n                delete src[k];\n            } else {\n                src[k] = data[k];\n            }\n        });\n        return src;\n    }\n\n    openTransaction(storeName, mode, opt) {\n        opt = opt || {};\n        var trans = this.db.transaction(storeName, mode);\n        if ('oncomplete' in opt) {\n            trans.oncomplete = opt.oncomplete;\n        }\n        if ('onabort' in opt) {\n            trans.onabort = opt.onabort;\n        }\n        if ('onerror' in opt) {\n            trans.onerror = opt.onerror;\n        }\n        return trans;\n    }\n\n    dropDB() {\n        this.close();\n        return this.indexedDB().deleteDatabase(this.config.dbName);\n    }\n    \n    close() {\n        return this.db.close();\n    }\n\n}\n","\"use strict\";\nlet slice = Array.prototype.slice;\n/**\n * @class com.sesamtv.core.util.Helper\n */\nexport var helper = {\n    /**\n     * create a sandboxed function\n     *\n     *      var fnc = sandbox(['id','name'],'alert(\"id\");');\n     *      //it will throw an error \"undefined is not a function\", because alert is disabled\n     *      fnc(10,'my name');\n     *\n     *      var fnc = sandbox(['id'], 'document.querySelector(\"#\"+id)');\n     *      //it will throw an error because document is disabled\n     *      fnc('container');\n     *\n     *      //to give the access of document to the function\n     *      var fnc = sandbox(['id'],'return document.querySelector(\"#\"+id);',{\n         *          shim:{\n         *              'document':document\n         *          }\n         *      });\n     *      //or only partially\n     *      var fnc = sandbox(['id'],'return document.querySelector(\"#\"+id);',{\n         *          shim:{\n         *              'document':{\n         *                  \"querySelector\":document.querySelector\n         *              }\n         *          }\n         *      });\n     *      fnc('menu');\n     *\n     *\n     * @method sandbox\n     * @param {Array.<String>} param\n     * @param {String} context\n     * @param {Object} opt\n     * @param {Array.<String>} [opt.restrictedVars] restricted variables\n     * @param {Object} [opt.shim] shim the restricted variables\n     * @param {Object} [opt.scope]\n     * @returns {Function}\n     */\n    sandbox: function sandbox(param, context, opt) {\n        opt = opt || {};\n        var restrictedVars = ['window', 'document', 'alert', 'location', 'openDatabase', 'indexedDB',\n                'console', 'close', 'setTimeout', 'setInterval', 'open', 'localStorage', 'sessionStorage',\n                'parent', 'self', 'addEventListener', 'dispatchEvent', 'postMessage', 'WebSocket', 'Blob',\n                'require', 'define', '$'].concat(opt.restrictedVars || []),\n            paramLen = param.length, fnc, argLen = 0, args, shimIndex = 0, foundShim, totalShim,\n            emptyVars = new Array(restrictedVars.length), shimKeys, shimKey,\n            splice = Array.prototype.splice;\n\n        if (opt.shim) {\n            shimKeys = Object.keys(opt.shim);\n            for (totalShim = shimKeys.length; shimIndex < totalShim; shimIndex++) {\n                shimKey = shimKeys[shimIndex];\n                foundShim = restrictedVars.indexOf(shimKey);\n                if (foundShim === -1) {\n                    continue;\n                }\n                emptyVars.splice(foundShim, 1, opt.shim[shimKey]);\n            }\n        }\n\n        param = param.concat(restrictedVars);\n        fnc = new Function(param.join(','), context);\n        return function () {\n            args = splice.call(arguments, 0, paramLen);\n            args = args.concat(emptyVars);\n            return fnc.apply(opt.scope || {}, args);\n        };\n    },\n\n    debounce: function debounce(func, wait, immediate) {\n        var timeout;\n        return function () {\n            var context = this, args = arguments;\n            clearTimeout(timeout);\n            timeout = setTimeout(function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            }, wait);\n            if (immediate && !timeout) func.apply(context, args);\n        };\n    },\n    randomIntFromInterval: function randomIntFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    throttle: function throttle(fn, minDelay) {\n        var lastCall = 0;\n        return function () {\n            var now = +new Date();\n            if (now - lastCall < minDelay) {\n                return;\n            }\n            lastCall = now;\n            return fn.apply(this, arguments);\n        };\n    },\n    /**\n     * @method leftPad\n     * @param {String|Number} result\n     * @param {Number} size\n     * @param {String} ch\n     * @returns {string}\n     */\n    leftPad: function (result, size, ch) {\n        result += '';\n        if (!ch) {\n            ch = \" \";\n        }\n        while (result.length < size) {\n            result = ch + result;\n        }\n        return result;\n    },\n    rightPad: function (result, size, ch) {\n        result += '';\n        if (!ch) {\n            ch = \" \";\n        }\n        while (result.length < size) {\n            result = result + ch;\n        }\n        return result;\n    },\n    /**\n     * async array processing without blocking the UI (useful when web worker is not available)\n     * @method chunk\n     * @param {Array} items\n     * @param {Function} process\n     * @param {Object} [context]\n     * @param {Function} [callback]\n     */\n    chunk: function timedChunk(items, process, context, callback) {\n        var todo = items.slice(0), i = 0;\n        setTimeout(function worker() {\n            var start = +new Date();\n            do {\n                process.call(context, todo.shift(), i++);\n            } while (todo.length > 0 && (+new Date() - start < 50));\n            if (todo.length > 0) {\n                setTimeout(worker, 25);\n            } else {\n                callback(items);\n            }\n        }, 25);\n    },\n    /**\n     * uppercase the first character\n     * @method ucFirst\n     * @param {String} str\n     * @returns {String}\n     */\n    ucFirst: function (str) {\n        str += '';\n        var f = str.charAt(0).toUpperCase();\n        return f + str.substr(1);\n    },\n    addSlashes: function (str) {\n        return (str + '')\n            .replace(/[\\\\\"']/g, '\\\\$&')\n            .replace(/\\u0000/g, '\\\\0');\n    },\n    applyIf: function applyIf(dest, obj, override) {\n        var key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key) && (!(key in dest) || override)) {\n                dest[key] = obj[key];\n            }\n        }\n    },\n    /**\n     * @method substitute\n     * @param {String} template\n     * @param {Object|Array} [map] if map is not defined, return a function with predefined template\n     * @param {Function} [transform]\n     * @param {Object} [thisObject] scope\n     * @returns {String|Function}\n     */\n    substitute: function (template, map, transform, thisObject) {\n        var self = this, run = function (data) {\n            return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\n                function (match, key, format) {\n                    var value = self.getObject(key, false, data);\n                    if (format) {\n                        value = self.getObject(format, false, thisObject).call(thisObject, value, key);\n                    }\n                    return transform(value, key).toString();\n                });\n        };\n        thisObject = thisObject || typeof(window) === 'undefined' ? global : window;\n        transform = transform ?\n            transform.bind(thisObject) : function (v) {\n            return v;\n        };\n        return map ? run(map) : function (map) {\n            return run(map);\n        };\n    },\n    /**\n     * @method taskBuffer\n     * @param {Array.<function(next:function)>} tasks\n     * @param {Object} [scope]\n     * @returns {{on: Function}}\n     */\n    taskBuffer: function taskBuffer(tasks, scope) {\n        var slice = Array.prototype.slice, args = arguments, task, on = {}, error;\n\n        function next() {\n            if (task = tasks.shift()) {\n                task.apply(scope, [next].concat(slice.call(arguments, 0)));\n            } else {\n                on.done && on.done();\n            }\n        }\n\n        next.error = function (err) {\n            error = err || 'unknown error';\n            on.error && on.error(err, tasks);\n        };\n        setTimeout(function () {\n            next.apply(scope, slice.call(args, 2));\n        }, 0);\n        return {\n            on: function (evtName, fnc) {\n                on[evtName] = fnc;\n                if (error) {\n                    on.error && on.error(error, tasks);\n                } else if (tasks.length === 0) {\n                    on.done && on.done();\n                }\n            }\n        }\n    },\n    taskBufferAsync: function (tasks, finished, options) {\n        options = options || {};\n        var total = tasks.length, task;\n        var done = function (err) {\n            total--;\n            if (!total || err) {\n                finished && finished(err);\n            }\n        };\n        var run = function () {\n            if (!tasks.length) {\n                return console.warn(\"taskBufferAsync - no task appending\");\n            }\n            while (task = tasks.shift()) {\n                if ('then' in task) {\n                    task.then(done);\n                } else {\n                    task(done);\n                }\n            }\n        };\n        if (options.standby) {\n            return {\n                run: function () {\n                    return run();\n                }\n            };\n        }\n        return run();\n    },\n    /**\n     * @method shallowMixin\n     * @param {Object} dest\n     * @param {Object} source\n     * @returns {Object}\n     */\n    shallowMixin: function (dest, source) {\n        var keys = Object.keys(source), name;\n        while ((name = keys.shift())) {\n            dest[name] = source[name];\n        }\n        return dest;\n    },\n    /**\n     * @method mixin\n     * @param {Object} dest\n     * @param {Object} source\n     * @param {Function} [cpFunc]\n     * @returns {Object}\n     */\n    mixin: function (dest, source, cpFunc) {\n        var name, s, empty = {};\n        for (name in source) {\n            s = source[name];\n            if (!(name in dest) ||\n                (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                dest[name] = cpFunc ? cpFunc(s) : s;\n            }\n        }\n        return dest;\n    },\n    /**\n     * @method merge\n     * @param {Object} target\n     * @param {Object} source\n     * @param {Boolean} [nonStrict]\n     * @returns {*}\n     */\n    merge: function merge(target, source, nonStrict) {\n        var tval, sval, name;\n        for (name in source) {\n            if (!nonStrict && !source.hasOwnProperty(name)) {\n                continue;\n            }\n            tval = target[name];\n            sval = source[name];\n            if (tval !== sval) {\n                if (tval && typeof tval === 'object' && sval && typeof sval === 'object') {\n                    merge(tval, sval, nonStrict);\n                } else {\n                    target[name] = sval;\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * according to [The structured clone algorithm](https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm)\n     * @method deepClone\n     * @param {Object} oToBeCloned\n     * @returns {Object}\n     */\n    deepClone: function deepClone(oToBeCloned) {\n        if (!oToBeCloned || typeof oToBeCloned !== \"object\" || typeof(oToBeCloned) === 'function') {\n            // null, undefined, any non-object, or function\n            return oToBeCloned;\t// anything\n        }\n        var oClone, FConstr = oToBeCloned.constructor;\n\n        if (typeof(HTMLElement) !== 'undefined' && oToBeCloned instanceof HTMLElement) {\n            oClone = oToBeCloned.cloneNode(true);\n        } else if (oToBeCloned instanceof RegExp) {\n            oClone = new RegExp(oToBeCloned.source,\n                \"g\".substr(0, Number(oToBeCloned.global)) +\n                \"i\".substr(0, Number(oToBeCloned.ignoreCase)) +\n                \"m\".substr(0, Number(oToBeCloned.multiline)));\n        } else if (oToBeCloned instanceof Date) {\n            oClone = new Date(oToBeCloned.getTime());\n        } else {\n            oClone = FConstr ? new FConstr() : {};\n            for (var sProp in oToBeCloned) {\n                if (!oToBeCloned.hasOwnProperty(sProp)) {\n                    continue;\n                }\n                oClone[sProp] = deepClone(oToBeCloned[sProp]);\n            }\n        }\n        return oClone;\n    },\n    /**\n     * example:\n     *\n     *      isType('Object')({toto:1});\n     *\n     * @method isType\n     * @param {String} compare Object,String,Array,Function, etc.\n     * @returns {Function}\n     */\n    isType: function isType(compare) {\n        if (typeof compare === 'string' && /^\\w+$/.test(compare)) {\n            compare = '[object ' + compare + ']';\n        } else {\n            compare = Object.prototype.toString.call(compare);\n        }\n        return isType[compare] || (isType[compare] = function (o) {\n                return Object.prototype.toString.call(o) === compare;\n            });\n    },\n    /**\n     * guess real type\n     * @method realType\n     * @param str\n     * @returns {*}\n     */\n    realType: function (str) {\n        var xml;\n        if (typeof(str) !== 'string') {\n            return str;\n        }\n        str = str.trim();\n        if (str.trim() === \"\") {\n            return str;\n        }\n        var mapping = ['true', 'false', 'null', 'undefined'];\n        if (+str === 0 || +str) {\n            return +str;\n        }\n        if (!!~mapping.indexOf(str.toLowerCase())) {\n            return eval(str.toLowerCase());\n        }\n        try {\n            return JSON.parse(str);\n        } catch (e) {\n        }\n        xml = new DOMParser().parseFromString(str, 'text/xml');\n        if (!xml.getElementsByTagName('parsererror').length) {\n            return xml;\n        }\n        return str;\n    },\n    /**\n     * @method castType\n     * @param {*} value\n     * @param {String} type\n     * @returns {*}\n     */\n    castType: function (value, type) {\n        var typeMapping = {\n            \"string\": function (s) {\n                return s + \"\";\n            },\n            \"number\": function (n) {\n                return +n;\n            },\n            \"array\": function (arr) {\n                if (Array.isArray(arr)) {\n                    return arr;\n                }\n                try {\n                    var tmp = JSON.parse(arr);\n                    if (Array.isArray(tmp)) {\n                        return tmp;\n                    }\n                } catch (e) {\n\n                }\n                return arr.split(',');\n            },\n            \"boolean\": function (value) {\n                if (!value) {\n                    value = false;\n                } else {\n                    value = ('' + value).toLowerCase();\n                    value = value !== 'false';\n                }\n                return value;\n            },\n            \"object\": function (o) {\n                try {\n                    return JSON.parse(o);\n                } catch (e) {\n                    return null;\n                }\n            },\n            \"xml\": function (str) {\n                return new DOMParser().parseFromString(str, 'text/xml');\n            }\n        };\n        if (arguments.length === 0) {\n            return typeMapping;\n        }\n        return typeMapping[type] && typeMapping[type](value);\n    },\n    /**\n     * @method getProp\n     * @param {Array} parts\n     * @param {Boolean} create\n     * @param {Object} context\n     * @return Object\n     */\n    getProp: function (parts, create, context) {\n        var obj = context || window;\n        for (var i = 0, p; obj && (p = parts[i]); i++) {\n            obj = (p in obj ? obj[p] : (create ? obj[p] = {} : undefined));\n        }\n        return obj; // mixed\n    },\n    /**\n     * @method getObject\n     * @param {String} name\n     * @param {Boolean} create\n     * @param {Object} context\n     * @return Object\n     */\n    getObject: function (name, create, context) {\n        return this.getProp(name.split(\".\"), create, context); // Object\n    },\n\n    /**\n     * create a function with partial params\n     *\n     *      var fnc1 = function(a,b,c){return a+b+c;}, undef = {}.undef;\n     *      var fnc2 = partial(fnc1,null,undef,2,undef);\n     *      fnc2(1,3); //returns 6\n     *      fnc2(1,1); //returns 4\n     *\n     * @method partial\n     * @param {Function} fn\n     * @param {Object} [scope]\n     * @returns {Function}\n     */\n    partial: function partial(fn, scope) {\n\n        var args = slice.call(arguments, 2);\n        return function () {\n            var arg = 0, i = 0, l = args.length;\n            for (; i < l && arg < arguments.length; i++)\n                if (args[i] === undefined)\n                    args[i] = arguments[arg++];\n            return fn.apply(scope, args);\n        };\n    },\n    queryToObject: function (query, separator) {\n        separator = separator || '&';\n        query = query.trim();\n        if (!query) {\n            return;\n        }\n        var params = {};\n        query.split(separator).forEach(function (part) {\n            part = part.trim();\n            if (!part) {\n                return;\n            }\n            var p = part.split('=');\n            params[p[0].trim()] = p[1].trim();\n        });\n        return params;\n    },\n    objectToQuery: function (obj, separator, fromJson) {\n        separator = separator || '&';\n        var query = [];\n        Object.keys(obj).forEach(function (k) {\n            var o = obj[k], tmp;\n            if (typeof(o) === 'object' && fromJson) {\n                try {\n                    tmp = JSON.stringify(o);\n                } catch (e) {\n                    //\n                }\n                if (tmp !== undefined) {\n                    o = encodeURIComponent(tmp);\n                }\n            }\n            query.push(k + '=' + o);\n        });\n        return query.join(separator);\n    },\n    /**\n     * Return an a object with the url being parsed and fully qualified\n     * @param url to parse\n     * @param baseUrl [optional] a base url to use to fully qualify the url\n     */\n    parseUrl: function (url, baseUrl) {\n        var a = document.createElement('a');\n        // testons d'abord que l'url ne contient pas dÃ©jÃ  les doubles ://\n        if (!/:\\/\\//.test(url)) {\n            a.href = baseUrl ? baseUrl : location.href;\n        }\n        a.href += url;\n\n        return {\n            hash: a.hash,\n            host: a.host,\n            hostname: a.hostname,\n            href: a.href,\n            pathname: a.pathname,\n            port: a.port,\n            protocol: a.protocol,\n            search: a.search\n        };\n    },\n    htmlentities: function htmlentities(string, quote_style, charset, double_encode) {\n        //  discuss at: http://phpjs.org/functions/htmlentities/\n        // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        // improved by: nobbler\n        // improved by: Jack\n        // improved by: RafaÅ‚ Kukawski (http://blog.kukawski.pl)\n        // improved by: Dj (http://phpjs.org/functions/htmlentities:425#comment_134018)\n        // bugfixed by: Onno Marsman\n        // bugfixed by: Brett Zamir (http://brett-zamir.me)\n        //    input by: Ratheous\n        //  depends on: get_html_translation_table\n        //   example 1: htmlentities('Kevin & van Zonneveld');\n        //   returns 1: 'Kevin &amp; van Zonneveld'\n        //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\");\n        //   returns 2: 'foo&#039;bar'\n\n        var hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style),\n            symbol = '';\n        string = string == null ? '' : string + '';\n\n        if (!hash_map) {\n            return false;\n        }\n\n        if (quote_style && quote_style === 'ENT_QUOTES') {\n            hash_map[\"'\"] = '&#039;';\n        }\n\n        if (!!double_encode || double_encode == null) {\n            for (symbol in hash_map) {\n                if (hash_map.hasOwnProperty(symbol)) {\n                    string = string.split(symbol)\n                        .join(hash_map[symbol]);\n                }\n            }\n        } else {\n            string = string.replace(/([\\s\\S]*?)(&(?:#\\d+|#x[\\da-f]+|[a-zA-Z][\\da-z]*);|$)/g, function (ignore, text, entity) {\n                for (symbol in hash_map) {\n                    if (hash_map.hasOwnProperty(symbol)) {\n                        text = text.split(symbol)\n                            .join(hash_map[symbol]);\n                    }\n                }\n\n                return text + entity;\n            });\n        }\n\n        return string;\n    },\n    get_html_translation_table: function get_html_translation_table(table, quote_style) {\n        //  discuss at: http://phpjs.org/functions/get_html_translation_table/\n        // original by: Philip Peterson\n        //  revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n        // bugfixed by: noname\n        // bugfixed by: Alex\n        // bugfixed by: Marco\n        // bugfixed by: madipta\n        // bugfixed by: Brett Zamir (http://brett-zamir.me)\n        // bugfixed by: T.Wild\n        // improved by: KELAN\n        // improved by: Brett Zamir (http://brett-zamir.me)\n        //    input by: Frank Forte\n        //    input by: Ratheous\n        //        note: It has been decided that we're not going to add global\n        //        note: dependencies to php.js, meaning the constants are not\n        //        note: real constants, but strings instead. Integers are also supported if someone\n        //        note: chooses to create the constants themselves.\n        //   example 1: get_html_translation_table('HTML_SPECIALCHARS');\n        //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n        var entities = {},\n            hash_map = {},\n            decimal;\n        var constMappingTable = {},\n            constMappingQuoteStyle = {};\n        var useTable = {},\n            useQuoteStyle = {};\n\n        // Translate arguments\n        constMappingTable[0] = 'HTML_SPECIALCHARS';\n        constMappingTable[1] = 'HTML_ENTITIES';\n        constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n        constMappingQuoteStyle[2] = 'ENT_COMPAT';\n        constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n        useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n        useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() :\n            'ENT_COMPAT';\n\n        if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n            throw new Error('Table: ' + useTable + ' not supported');\n            // return false;\n        }\n\n        entities['38'] = '&amp;';\n        if (useTable === 'HTML_ENTITIES') {\n            entities['160'] = '&nbsp;';\n            entities['161'] = '&iexcl;';\n            entities['162'] = '&cent;';\n            entities['163'] = '&pound;';\n            entities['164'] = '&curren;';\n            entities['165'] = '&yen;';\n            entities['166'] = '&brvbar;';\n            entities['167'] = '&sect;';\n            entities['168'] = '&uml;';\n            entities['169'] = '&copy;';\n            entities['170'] = '&ordf;';\n            entities['171'] = '&laquo;';\n            entities['172'] = '&not;';\n            entities['173'] = '&shy;';\n            entities['174'] = '&reg;';\n            entities['175'] = '&macr;';\n            entities['176'] = '&deg;';\n            entities['177'] = '&plusmn;';\n            entities['178'] = '&sup2;';\n            entities['179'] = '&sup3;';\n            entities['180'] = '&acute;';\n            entities['181'] = '&micro;';\n            entities['182'] = '&para;';\n            entities['183'] = '&middot;';\n            entities['184'] = '&cedil;';\n            entities['185'] = '&sup1;';\n            entities['186'] = '&ordm;';\n            entities['187'] = '&raquo;';\n            entities['188'] = '&frac14;';\n            entities['189'] = '&frac12;';\n            entities['190'] = '&frac34;';\n            entities['191'] = '&iquest;';\n            entities['192'] = '&Agrave;';\n            entities['193'] = '&Aacute;';\n            entities['194'] = '&Acirc;';\n            entities['195'] = '&Atilde;';\n            entities['196'] = '&Auml;';\n            entities['197'] = '&Aring;';\n            entities['198'] = '&AElig;';\n            entities['199'] = '&Ccedil;';\n            entities['200'] = '&Egrave;';\n            entities['201'] = '&Eacute;';\n            entities['202'] = '&Ecirc;';\n            entities['203'] = '&Euml;';\n            entities['204'] = '&Igrave;';\n            entities['205'] = '&Iacute;';\n            entities['206'] = '&Icirc;';\n            entities['207'] = '&Iuml;';\n            entities['208'] = '&ETH;';\n            entities['209'] = '&Ntilde;';\n            entities['210'] = '&Ograve;';\n            entities['211'] = '&Oacute;';\n            entities['212'] = '&Ocirc;';\n            entities['213'] = '&Otilde;';\n            entities['214'] = '&Ouml;';\n            entities['215'] = '&times;';\n            entities['216'] = '&Oslash;';\n            entities['217'] = '&Ugrave;';\n            entities['218'] = '&Uacute;';\n            entities['219'] = '&Ucirc;';\n            entities['220'] = '&Uuml;';\n            entities['221'] = '&Yacute;';\n            entities['222'] = '&THORN;';\n            entities['223'] = '&szlig;';\n            entities['224'] = '&agrave;';\n            entities['225'] = '&aacute;';\n            entities['226'] = '&acirc;';\n            entities['227'] = '&atilde;';\n            entities['228'] = '&auml;';\n            entities['229'] = '&aring;';\n            entities['230'] = '&aelig;';\n            entities['231'] = '&ccedil;';\n            entities['232'] = '&egrave;';\n            entities['233'] = '&eacute;';\n            entities['234'] = '&ecirc;';\n            entities['235'] = '&euml;';\n            entities['236'] = '&igrave;';\n            entities['237'] = '&iacute;';\n            entities['238'] = '&icirc;';\n            entities['239'] = '&iuml;';\n            entities['240'] = '&eth;';\n            entities['241'] = '&ntilde;';\n            entities['242'] = '&ograve;';\n            entities['243'] = '&oacute;';\n            entities['244'] = '&ocirc;';\n            entities['245'] = '&otilde;';\n            entities['246'] = '&ouml;';\n            entities['247'] = '&divide;';\n            entities['248'] = '&oslash;';\n            entities['249'] = '&ugrave;';\n            entities['250'] = '&uacute;';\n            entities['251'] = '&ucirc;';\n            entities['252'] = '&uuml;';\n            entities['253'] = '&yacute;';\n            entities['254'] = '&thorn;';\n            entities['255'] = '&yuml;';\n        }\n\n        if (useQuoteStyle !== 'ENT_NOQUOTES') {\n            entities['34'] = '&quot;';\n        }\n        if (useQuoteStyle === 'ENT_QUOTES') {\n            entities['39'] = '&#39;';\n        }\n        entities['60'] = '&lt;';\n        entities['62'] = '&gt;';\n\n        // ascii decimals to real symbols\n        for (decimal in entities) {\n            if (entities.hasOwnProperty(decimal)) {\n                hash_map[String.fromCharCode(decimal)] = entities[decimal];\n            }\n        }\n\n        return hash_map;\n    },\n    /**\n     * support commonjs and promise\n     * @method async\n     * @param {Function} makeGenerator a generator function which returns promise\n     * @returns {Function}\n     */\n    async: function async(makeGenerator) {\n        return function () {\n            var generator = makeGenerator.apply(this, arguments);\n            function handle(result) { // { done: [Boolean], value: [Object] }\n                if (result.done) {\n                    return result.value;\n                }\n                if (result.value.then) {\n                    return result.value.then(function (res) {\n                        return handle(generator.next(res));\n                    }, function (err) {\n                        return handle(generator.throw(err));\n                    });\n                } else {\n                    return result.value(function (err, res) {\n                        if (err) {\n                            handle(generator.throw(err));\n                        } else {\n                            handle(generator.next(res));\n                        }\n                    });\n                }\n            }\n            return handle(generator.next());\n        }\n    }\n};\n"],"sourceRoot":"/source/"}